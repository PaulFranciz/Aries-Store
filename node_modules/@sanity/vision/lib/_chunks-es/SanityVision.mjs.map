{"version":3,"file":"SanityVision.mjs","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/perspectives.ts","../../src/util/encodeQueryString.ts","../../src/util/getBlobUrl.ts","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/prefixApiVersion.ts","../../src/util/resizeObserver.ts","../../src/util/tryParseParams.ts","../../src/util/validateApiVersion.ts","../../src/components/ParamsEditor.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/SaveResultButtons.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/containers/VisionErrorBoundary.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21', 'v2022-03-07']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import {Spinner} from '@sanity/ui'\nimport {useEffect, useState} from 'react'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {closeBrackets} from '@codemirror/autocomplete'\nimport {defaultKeymap, history, historyKeymap} from '@codemirror/commands'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {\n  bracketMatching,\n  defaultHighlightStyle,\n  indentOnInput,\n  syntaxHighlighting,\n} from '@codemirror/language'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {type Extension} from '@codemirror/state'\nimport {\n  drawSelection,\n  highlightActiveLine,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  keymap,\n  lineNumbers,\n} from '@codemirror/view'\n\nexport const codemirrorExtensions: Extension[] = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of(\n    [\n      // Override the default keymap for Mod-Enter to not insert a new line, we have a custom event handler for executing queries\n      {key: 'Mod-Enter', run: () => true},\n\n      // Add the default keymap and history keymap\n      defaultKeymap,\n      historyKeymap,\n    ]\n      .flat()\n      .filter(Boolean),\n  ),\n]\n","import {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {EditorView} from '@codemirror/view'\nimport {tags as t} from '@lezer/highlight'\nimport {hues} from '@sanity/color'\nimport {rem, type Theme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark},\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import {useTheme} from '@sanity/ui'\nimport CodeMirror, {type ReactCodeMirrorProps} from '@uiw/react-codemirror'\n\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>,\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\n\nexport type SupportedPerspective = 'raw' | 'previewDrafts' | 'published' | 'drafts'\n\nexport const SUPPORTED_PERSPECTIVES = [\n  'raw',\n  'previewDrafts',\n  'published',\n  'drafts',\n] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = SUPPORTED_PERSPECTIVES[0]\n\nexport function isSupportedPerspective(p: string): p is SupportedPerspective {\n  return SUPPORTED_PERSPECTIVES.includes(p as SupportedPerspective)\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {},\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import {json2csv} from 'json-2-csv'\n\nfunction getBlobUrl(content: string, mimeType: string): string {\n  return URL.createObjectURL(\n    new Blob([content], {\n      type: mimeType,\n    }),\n  )\n}\n\nfunction getMemoizedBlobUrlResolver(mimeType: string, stringEncoder: (input: any) => string) {\n  return (() => {\n    let prevResult = ''\n    let prevContent = ''\n    return (input: unknown) => {\n      const content = stringEncoder(input)\n      if (typeof content !== 'string' || content === '') {\n        return undefined\n      }\n\n      if (content === prevContent) {\n        return prevResult\n      }\n\n      prevContent = content\n      if (prevResult) {\n        URL.revokeObjectURL(prevResult)\n      }\n\n      prevResult = getBlobUrl(content, mimeType)\n      return prevResult\n    }\n  })()\n}\n\nexport const getJsonBlobUrl = getMemoizedBlobUrlResolver('application/json', (input) =>\n  JSON.stringify(input, null, 2),\n)\n\nexport const getCsvBlobUrl = getMemoizedBlobUrlResolver('text/csv', (input) => {\n  return json2csv(Array.isArray(input) ? input : [input]).trim()\n})\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\nconst keyPrefix = 'sanityVision:'\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function clearLocalStorage() {\n  if (!hasLocalStorage) {\n    return\n  }\n\n  for (let i = 0; i < localStorage.length; i++) {\n    const key = localStorage.key(i)\n    if (key?.startsWith(keyPrefix)) {\n      localStorage.removeItem(key)\n    }\n  }\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `${keyPrefix}${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import JSON5 from 'json5'\nimport {type TFunction} from 'sanity'\n\nexport function tryParseParams(\n  val: string,\n  t: TFunction<'vision', undefined>,\n): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `${t('params.error.params-invalid-json')}:\\n\\n${err.message.replace(\n      'JSON5:',\n      '',\n    )}`\n    return err\n  }\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      parseableApiVersion === '1' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","import {debounce} from 'lodash'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {type TFunction, useTranslation} from 'sanity'\n\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {visionLocaleNamespace} from '../i18n'\nimport {tryParseParams} from '../util/tryParseParams'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {t} = useTranslation(visionLocaleNamespace)\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value, t)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue, t)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange, t],\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(\n  value: string,\n  t: TFunction<typeof visionLocaleNamespace, undefined>,\n): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value, t)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {Box} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import {HelpCircleIcon} from '@sanity/icons'\nimport {Badge, Button, Card, Inline, Popover, Stack, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useRef, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const buttonRef = useRef<HTMLButtonElement | null>(null)\n  const popoverRef = useRef<HTMLDivElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  useClickOutsideEvent(\n    () => setOpen(false),\n    () => [buttonRef.current, popoverRef.current],\n  )\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">{t('settings.perspectives.title')}</Text>\n              <Badge tone=\"primary\">{t('label.new')}</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>{t('settings.perspectives.description')}</Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  {t('settings.perspectives.action.docs-link')} &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={popoverRef}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={buttonRef}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import {Code} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import {Box} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd,\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`${t('query.error.line')}:   ${details.lineNumber}\\n${t(\n          'query.error.column',\n        )}: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import {Stack} from '@sanity/ui'\n\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div<{theme: Theme}>(({theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {LinkIcon} from '@sanity/icons'\nimport {Code} from '@sanity/ui'\nimport LRU from 'quick-lru'\nimport {useDataset} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = new LRU({maxSize: 50000})\n\nexport function ResultView(props: {data: unknown; datasetName: string}): React.JSX.Element {\n  const {data, datasetName} = props\n  const workspaceDataset = useDataset()\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JsonInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n          interactiveLabel={workspaceDataset === datasetName ? DocumentEditLabel : undefined}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction DocumentEditLabel(props: {value: string; isKey: boolean; keypath: string}) {\n  if (props.isKey || (!props.keypath.endsWith('_id') && !props.keypath.endsWith('_ref'))) {\n    return null\n  }\n\n  return (\n    <IntentLink intent=\"edit\" params={{id: props.value}}>\n      <LinkIcon />\n    </IntentLink>\n  )\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {DocumentSheetIcon} from '@sanity/icons'\nimport {Button, Tooltip} from '@sanity/ui'\nimport {type MouseEvent} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {visionLocaleNamespace} from '../i18n'\n\ninterface SaveButtonProps {\n  blobUrl: string | undefined\n}\n\nfunction preventSave(evt: MouseEvent<HTMLButtonElement>) {\n  return evt.preventDefault()\n}\n\nexport function SaveCsvButton({blobUrl}: SaveButtonProps) {\n  const {t} = useTranslation(visionLocaleNamespace)\n  const isDisabled = !blobUrl\n\n  const button = (\n    <Button\n      as=\"a\"\n      disabled={isDisabled}\n      download={isDisabled ? undefined : 'query-result.csv'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      onClick={isDisabled ? preventSave : undefined}\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"CSV\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n\n  return isDisabled ? (\n    <Tooltip content={t('result.save-result-as-csv.not-csv-encodable')} placement=\"top\">\n      {button}\n    </Tooltip>\n  ) : (\n    button\n  )\n}\n\nexport function SaveJsonButton({blobUrl}: SaveButtonProps) {\n  return (\n    <Button\n      as=\"a\"\n      download={'query-result.json'}\n      href={blobUrl}\n      icon={DocumentSheetIcon}\n      mode=\"ghost\"\n      // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n      text=\"JSON\" // String is a File extension\n      tone=\"default\"\n    />\n  )\n}\n","import {Box, Card, Flex, Label, rem, Text} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const ResultFooter = styled(Flex)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight,\n    )};\n`\n\nexport const DownloadsCard = styled(Card)`\n  position: relative;\n`\n\nexport const SaveResultLabel = styled(Text)`\n  transform: initial;\n  &:before,\n  &:after {\n    content: none;\n  }\n  > span {\n    display: flex !important;\n    gap: ${({theme}) => rem(theme.sanity.space[3])};\n    align-items: center;\n  }\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n","/* eslint-disable complexity */\nimport {SplitPane} from '@rexxars/react-split-pane'\nimport {type ListenEvent, type MutationEvent, type SanityClient} from '@sanity/client'\nimport {CopyIcon, ErrorOutlineIcon, PlayIcon, StopIcon} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Grid,\n  Hotkeys,\n  Inline,\n  Select,\n  Stack,\n  Text,\n  TextInput,\n  type ToastContextValue,\n  Tooltip,\n} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {type ChangeEvent, createRef, PureComponent, type RefObject} from 'react'\nimport {type TFunction, Translate} from 'sanity'\n\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {\n  DEFAULT_PERSPECTIVE,\n  isSupportedPerspective,\n  SUPPORTED_PERSPECTIVES,\n  type SupportedPerspective,\n} from '../perspectives'\nimport {type VisionProps} from '../types'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {getCsvBlobUrl, getJsonBlobUrl} from '../util/getBlobUrl'\nimport {getLocalStorage, type LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, type ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {ResultView} from './ResultView'\nimport {SaveCsvButton, SaveJsonButton} from './SaveResultButtons'\nimport {\n  ControlsContainer,\n  DownloadsCard,\n  Header,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  QueryCopyLink,\n  Result,\n  ResultContainer,\n  ResultFooter,\n  ResultInnerContainer,\n  ResultOuterContainer,\n  Root,\n  SaveResultLabel,\n  SplitpaneContainer,\n  StyledLabel,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction narrowBreakpoint(): boolean {\n  return typeof window !== 'undefined' && window.innerWidth > 600\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / (narrowBreakpoint() ? 2 : 1),\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n  t: TFunction<'vision', undefined>\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: SupportedPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement | null>\n  _queryEditorContainer: RefObject<HTMLDivElement | null>\n  _paramsEditorContainer: RefObject<HTMLDivElement | null>\n  _operationUrlElement: RefObject<HTMLInputElement | null>\n  _customApiVersionElement: RefObject<HTMLInputElement | null>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    let lastQuery = this._localStorage.get('query', '')\n    let lastParams = this._localStorage.get('params', '{\\n  \\n}')\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!SUPPORTED_PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    if (typeof lastQuery !== 'string') {\n      lastQuery = ''\n    }\n\n    if (typeof lastParams !== 'string') {\n      lastParams = '{\\n  \\n}'\n    }\n\n    this._visionRoot = createRef()\n    this._operationUrlElement = createRef()\n    this._queryEditorContainer = createRef()\n    this._paramsEditorContainer = createRef()\n    this._customApiVersionElement = createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams, this.props.t) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = isSupportedPerspective(parts.options.perspective)\n      ? parts.options.perspective\n      : undefined\n\n    if (!isSupportedPerspective(parts.options.perspective)) {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-paste-unsupported-perspective',\n        status: 'warning',\n        title: 'Perspective in pasted url is currently not supported. Falling back to \"raw\"',\n      })\n    }\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.rawParams,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      },\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion?.toLowerCase() === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      },\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isSupportedPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts)),\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw),\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets, t} = this.props\n    const {\n      apiVersion,\n      customApiVersion,\n      dataset,\n      e2eTime,\n      error,\n      hasValidParams,\n      isValidApiVersion,\n      listenInProgress,\n      listenMutations,\n      paneSizeOptions,\n      paramsError,\n      perspective,\n      query,\n      queryInProgress,\n      queryResult,\n      queryTime,\n      rawParams,\n      url,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n    const jsonUrl = hasResult ? getJsonBlobUrl(queryResult) : ''\n    const csvUrl = hasResult ? getCsvBlobUrl(queryResult) : ''\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[1, 4, 8, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.dataset-label')}</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>{t('settings.api-version-label')}</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    {t('settings.other-api-version-label')}\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">\n                      {t('settings.custom-api-version-label')}\n                    </StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={\n                      isValidApiVersion ? undefined : t('settings.error.invalid-api-version')\n                    }\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>{t('settings.perspective-label')}</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {SUPPORTED_PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      {t('query.url')}&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>\n                        [{t('action.copy-url-to-clipboard')}]\n                      </QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip content={t('action.copy-url-to-clipboard')}>\n                      <Button\n                        aria-label={t('action.copy-url-to-clipboard')}\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex=\"auto\">\n          <SplitPane\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            split={narrowBreakpoint() ? 'vertical' : 'horizontal'}\n            minSize={280}\n            defaultSize={400}\n            maxSize={-400}\n          >\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={\n                  narrowBreakpoint() ? paneSizeOptions.defaultSize : paneSizeOptions.minSize\n                }\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={narrowBreakpoint() ? paneSizeOptions.minSize : 100}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('query.label')}</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>{t('params.label')}</StyledLabel>\n                        {paramsError && (\n                          <Tooltip placement=\"top-end\" portal content={paramsError}>\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card radius={4}>\n                            <Text size={1} muted>\n                              {t('params.error.params-invalid-json')}\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <Button\n                                width=\"fill\"\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={\n                                  queryInProgress\n                                    ? t('action.query-cancel')\n                                    : t('action.query-execute')\n                                }\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <Button\n                              width=\"fill\"\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={\n                                listenInProgress\n                                  ? t('action.listen-cancel')\n                                  : t('action.listen-execute')\n                              }\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>{t('result.label')}</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} datasetName={dataset} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} datasetName={dataset} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <ResultFooter justify=\"space-between\" direction={['column', 'column', 'row']}>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        {t('result.execution-time-label')}:{' '}\n                        {typeof queryTime === 'number'\n                          ? `${queryTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        {t('result.end-to-end-time-label')}:{' '}\n                        {typeof e2eTime === 'number'\n                          ? `${e2eTime}ms`\n                          : t('result.timing-not-applicable')}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n\n                {hasResult && (\n                  <DownloadsCard paddingX={4} paddingY={3} sizing=\"border\">\n                    <SaveResultLabel muted>\n                      <Translate\n                        components={{\n                          SaveResultButtons: () => (\n                            <>\n                              <SaveJsonButton blobUrl={jsonUrl} />\n                              <SaveCsvButton blobUrl={csvUrl} />\n                            </>\n                          ),\n                        }}\n                        i18nKey=\"result.save-result-as-format\"\n                        t={t}\n                      />\n                    </SaveResultLabel>\n                  </DownloadsCard>\n                )}\n              </ResultFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import {type SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {Flex, useToast} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport {visionLocaleNamespace} from '../i18n'\nimport {type VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  const {t} = useTranslation(visionLocaleNamespace)\n\n  if (!loadedDatasets) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <DelayedSpinner />\n      </Flex>\n    )\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} t={t} />\n}\n","/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable i18next/no-literal-string */\nimport {Button, Card, Code, Container, Heading, Stack} from '@sanity/ui'\nimport {Component, type PropsWithChildren} from 'react'\n\nimport {clearLocalStorage} from '../util/localStorage'\n\n/**\n * @internal\n */\nexport type VisionErrorBoundaryProps = PropsWithChildren\n\n/**\n * @internal\n */\ninterface VisionErrorBoundaryState {\n  error: string | null\n  numRetries: number\n}\n\n/**\n * @internal\n */\nexport class VisionErrorBoundary extends Component<\n  VisionErrorBoundaryProps,\n  VisionErrorBoundaryState\n> {\n  constructor(props: VisionErrorBoundaryProps) {\n    super(props)\n    this.state = {error: null, numRetries: 0}\n  }\n\n  static getDerivedStateFromError(error: unknown) {\n    return {error: error instanceof Error ? error.message : `${error}`}\n  }\n\n  handleRetryRender = () =>\n    this.setState((prev) => ({error: null, numRetries: prev.numRetries + 1}))\n\n  handleRetryWithCacheClear = () => {\n    clearLocalStorage()\n    this.handleRetryRender()\n  }\n\n  render() {\n    if (!this.state.error) {\n      return this.props.children\n    }\n\n    const message = this.state.error\n    const withCacheClear = this.state.numRetries > 0\n\n    return (\n      <Card\n        height=\"fill\"\n        overflow=\"auto\"\n        paddingY={[4, 5, 6, 7]}\n        paddingX={4}\n        sizing=\"border\"\n        tone=\"critical\"\n      >\n        <Container width={3}>\n          <Stack space={4}>\n            <div>\n              <Button\n                onClick={withCacheClear ? this.handleRetryWithCacheClear : this.handleRetryRender}\n                text={withCacheClear ? 'Clear cache and retry' : 'Retry'}\n                tone=\"default\"\n              />\n            </div>\n\n            <Heading>An error occurred</Heading>\n\n            <Card border radius={2} overflow=\"auto\" padding={4} tone=\"inherit\">\n              <Stack space={4}>\n                {message && (\n                  <Code size={1}>\n                    <strong>Error: {message}</strong>\n                  </Code>\n                )}\n              </Stack>\n            </Card>\n          </Stack>\n        </Container>\n      </Card>\n    )\n  }\n}\n","import {type Tool, useClient} from 'sanity'\n\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\nimport {VisionErrorBoundary} from './containers/VisionErrorBoundary'\nimport {type VisionConfig} from './types'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return (\n    <VisionErrorBoundary>\n      <VisionContainer client={client} config={config} />\n    </VisionErrorBoundary>\n  )\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","$","_c","show","setShow","useState","t0","t1","delay","timer","setTimeout","clearTimeout","useEffect","t2","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","key","run","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","createTheme","cmTheme","t3","createHighlight","cmHighlight","t4","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","div","space","VisionCodeMirror","sanityTheme","useTheme","SUPPORTED_PERSPECTIVES","DEFAULT_PERSPECTIVE","isSupportedPerspective","p","includes","encodeQueryString","query","params","options","searchParams","URLSearchParams","set","value","Object","entries","JSON","stringify","getBlobUrl","content","mimeType","URL","createObjectURL","Blob","type","getMemoizedBlobUrlResolver","stringEncoder","prevResult","prevContent","input","revokeObjectURL","getJsonBlobUrl","getCsvBlobUrl","json2csv","Array","isArray","trim","isPlainObject","obj","prototype","toString","call","hasLocalStorage","supportsLocalStorage","keyPrefix","clearLocalStorage","i","localStorage","length","startsWith","removeItem","getLocalStorage","storageKey","loadedState","get","merge","defaultVal","state","ensureState","setItem","loadState","stored","parse","getItem","mod","parseApiQueryString","qs","prefixApiVersion","version","RO","document","ResizeObserverPolyfill","window","ResizeObserver","tryParseParams","val","parsed","JSON5","err","message","replace","validateApiVersion","apiVersion","parseableApiVersion","toUpperCase","test","isNaN","Date","defaultValue","ParamsEditor","onChange","useTranslation","visionLocaleNamespace","eventFromValue","raw","error","valid","isValid","setValid","init","setInit","newValue","event","handleChangeRaw","t5","debounce","handleChange","t6","t7","parsedParams","Error","validationError","undefined","PerspectivePopoverContent","Box","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonRef","useRef","popoverRef","Symbol","for","_temp","handleClick","current","useClickOutsideEvent","t8","t9","t10","t11","t12","t13","HelpCircleIcon","t14","o","ErrorCode","Code","muted","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","ResultViewWrapper","css","lru","LRU","maxSize","ResultView","data","datasetName","workspaceDataset","useDataset","isRecord","DocumentEditLabel","isExpanded","toggleExpanded","isKey","keypath","endsWith","id","keyPath","cached","segments","split","depthLimit","some","isArrayKeyOverLimit","path","numeric","segment","limit","parseInt","preventSave","evt","preventDefault","SaveCsvButton","blobUrl","isDisabled","DocumentSheetIcon","button","SaveJsonButton","Root","Flex","displayName","Header","Card","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","ResultFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","DownloadsCard","SaveResultLabel","Text","ControlsContainer","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","narrowBreakpoint","innerWidth","calculatePaneSizeOptions","rootHeight","defaultSize","size","allowResize","minSize","Math","min","max","VisionGui","PureComponent","constructor","client","datasets","config","_localStorage","projectId","defaultDataset","dataset","defaultApiVersion","defaultPerspective","lastQuery","lastParams","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","isValidApiVersion","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","warn","toast","push","closable","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","toLowerCase","focus","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","console","render","hasResult","jsonUrl","csvUrl","map","ds","CopyIcon","StopIcon","PlayIcon","SaveResultButtons","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","VisionErrorBoundary","Component","numRetries","getDerivedStateFromError","handleRetryRender","prev","handleRetryWithCacheClear","children","withCacheClear","SanityVision","useClient","tool"],"mappings":"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"}