{"version":3,"file":"PresentationToolGrantsCheck.js","sources":["../../../visual-editing-helpers/dist/index.js","../../src/features/PostMessageFeatures.tsx","../../src/lib/debounce.ts","../../src/overlays/SharedStateProvider.tsx","../../src/panels/PanelsContext.tsx","../../src/panels/Panel.tsx","../../src/panels/usePanelsStorage.ts","../../src/panels/util.ts","../../src/panels/Panels.tsx","../../src/components/ErrorCard.tsx","../../src/editor/PresentationPaneRouterProvider.tsx","../../src/editor/DocumentListPane.tsx","../../src/editor/DocumentPane.tsx","../../src/editor/DocumentPanel.tsx","../../src/editor/usePreviewState.ts","../../src/editor/ContentEditor.tsx","../../../../node_modules/.pnpm/uuid@11.0.4/node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/.pnpm/uuid@11.0.4/node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/.pnpm/uuid@11.0.4/node_modules/uuid/dist/esm-browser/native.js","../../../../node_modules/.pnpm/uuid@11.0.4/node_modules/uuid/dist/esm-browser/v4.js","../../src/panels/usePanelId.ts","../../src/panels/PanelResizer.tsx","../../src/PresentationContent.tsx","../../src/PresentationNavigateProvider.tsx","../../src/useLocalState.ts","../../src/PresentationNavigator.tsx","../../src/PresentationParamsProvider.tsx","../../src/PresentationProvider.tsx","../../src/preview/IFrame.tsx","../../src/preview/OpenPreviewButton.tsx","../../src/preview/PreviewLocationInput.tsx","../../src/preview/SharePreviewMenu.tsx","../../src/preview/PreviewHeader.tsx","../../src/preview/Preview.tsx","../../src/util/useEffectOnChange.ts","../../src/RevisionSwitcher.tsx","../../src/util/warnOnce.ts","../../src/useDocumentsOnPage.ts","../../src/useMainDocument.ts","../../src/lib/parse.ts","../../src/useParams.ts","../../src/usePopups.ts","../../src/usePreviewUrl.ts","../../src/useStatus.ts","../../src/PresentationTool.tsx","../../src/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  const { channelId, ...rest } = comlinkMessage, message = { ...rest, connectionId: channelId };\n  return message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","import {memo, useEffect, type FC} from 'react'\nimport type {VisualEditingConnection} from '../types'\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageFeatures: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    return comlink.on('visual-editing/features', () => ({\n      features: {\n        optimistic: true,\n      },\n    }))\n  }, [comlink])\n\n  return null\n}\n\nexport default memo(PostMessageFeatures)\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import type {Serializable, SerializableObject} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingConnection} from '../types'\nimport {SharedStateContext, type SharedStateContextValue} from './SharedStateContext'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<SharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return <SharedStateContext.Provider value={context}>{children}</SharedStateContext.Provider>\n}\n","import {createContext, type CSSProperties} from 'react'\nimport type {PanelElement, ResizerElement} from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {useContext, useLayoutEffect, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\nimport {debounce} from '../lib/debounce'\nimport type {PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Inline, Stack, Text, type CardProps} from '@sanity/ui'\nimport type {ReactElement, ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, useCallback, useMemo, type PropsWithChildren, type ReactElement} from 'react'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  getPublishedId,\n  PaneRouterContext,\n  useUnique,\n  type BackLinkProps,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from '../internals'\nimport type {\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): ReactElement {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams['inspect'] ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, ErrorBoundary, Flex, Label, Stack} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type ErrorInfo, type ReactElement} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPublishedId,\n  PaneLayout,\n  DocumentListPane as StructureDocumentListPane,\n  StructureToolProvider,\n  type PaneNode,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): ReactElement {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => r._id),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane index={0} itemId=\"$root\" pane={pane} paneKey=\"$root\" />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, ErrorBoundary, Label, Stack} from '@sanity/ui'\nimport {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type ErrorInfo,\n  type ReactElement,\n} from 'react'\nimport {useTranslation, type Path} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  decodeJsonParams,\n  PaneLayout,\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n} from '../internals'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type ReactElement} from 'react'\nimport {type Path} from 'sanity'\nimport {StructureToolProvider} from '../internals'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  useDocumentPreviewStore,\n  type PreviewValue,\n  type SanityDocument,\n} from '../internals'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo, type HTMLProps, type ReactElement} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n  type Path,\n  type SanityDocument,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      // @ts-expect-error fix later\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport type {Path, SanityDocument} from 'sanity'\nimport {ContentEditor} from './editor/ContentEditor'\nimport {CommentsIntentProvider, type CommentIntentGetter} from './internals'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {\n  MainDocumentState,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParams['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParams['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport type {PresentationNavigate} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {useEffect, useState, type Dispatch, type SetStateAction} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, useId, type ReactEventHandler} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion.create(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Button, Text, Tooltip} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      padding={2}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        fontSize={1}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        padding={2}\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {useActiveWorkspace} from '../internals'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(origin + '/') && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type {SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion.create(Spinner)\nconst MotionText = motion.create(Text)\nconst MotionMonogram = motion.create(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          fontSize={1}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          padding={2}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    padding={1}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                fontSize={1}\n                padding={3}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        animate: true,\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  type ButtonTone,\n} from '@sanity/ui'\nimport {\n  createElement,\n  useCallback,\n  useMemo,\n  type ComponentType,\n  type FunctionComponent,\n  type ReactNode,\n  type RefObject,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport type {PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\nconst PERSPECTIVE_ICONS: Record<PresentationPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement>\n  renderDefault: (props: PreviewHeaderProps) => ReactNode\n}\n\nconst PreviewHeaderDefault: FunctionComponent<Omit<PreviewHeaderProps, 'renderDefault'>> = (\n  props,\n) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <>\n      {toggleNavigator && (\n        <Box flex=\"none\" marginRight={1} padding={1}>\n          <Tooltip\n            animate\n            content={<Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>}\n            fallbackPlacements={['bottom-start']}\n            padding={2}\n            placement=\"bottom\"\n            portal\n          >\n            <Button\n              aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n              fontSize={1}\n              icon={PanelLeftIcon}\n              mode=\"bleed\"\n              onClick={toggleNavigator}\n              padding={2}\n              selected={navigatorEnabled}\n            />\n          </Tooltip>\n        </Box>\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        padding={1}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          marginRight={1}\n          padding={3}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1} marginX={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  padding={2}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1} padding={1}>\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              padding={2}\n              space={2}\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('previewDrafts')}\n                padding={3}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.previewDrafts)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['previewDrafts'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.previewDrafts.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'previewDrafts' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('published')}\n                padding={3}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.published)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['published'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.published.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'published' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n            </Menu>\n          }\n          popover={{\n            animate: true,\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          padding={2}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            fontSize={1}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            padding={2}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1} paddingX={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nconst PreviewHeader: FunctionComponent<\n  Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions}\n> = (props) => {\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return createElement(PreviewHeaderDefault, props)\n  }, [])\n\n  const header = props.options?.component\n    ? createElement(props.options.component, {...props, renderDefault})\n    : renderDefault(props)\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","import {\n  Button,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type {\n  ConnectionStatus,\n  HeaderOptions,\n  PresentationPerspective,\n  PresentationViewport,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion.create(Flex)\n\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: ConnectionStatus\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: ConnectionStatus\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {dispatch, iframe, header, initialUrl, loadersConnection, overlaysConnection, viewport} =\n      props\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider delay={1000}>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={initialUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import {useEffect, useRef} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  _callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n  const callback = useEffectEvent(_callback)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return callback(value, prev)\n    }\n  }, [callback, comparator, value])\n}\n","import {type FunctionComponent} from 'react'\nimport {useEditState} from './internals'\nimport type {PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(perspective, (value) => {\n    let rev: string | undefined = undefined\n    if (value === 'published' && editState.published) {\n      const {_updatedAt, _rev} = editState.published\n      rev = `${_updatedAt}/${_rev}`\n    }\n    if (documentRevision !== rev) {\n      navigate({}, {rev}, true)\n    }\n  })\n\n  return null\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {useCallback, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {FrameState, PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import type {ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {useRouter, type RouterState} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\nimport {API_VERSION} from './constants'\nimport type {\n  DocumentResolver,\n  DocumentResolverContext,\n  MainDocument,\n  MainDocumentState,\n  PresentationNavigate,\n  PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.['id'] === navigationHistory.at(-2)?.['id']) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n","import {urlStringToPath} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {RouterContextValue, RouterState, SearchParam} from 'sanity/router'\nimport {getPublishedId} from './internals'\nimport {parseRouterState} from './lib/parse'\nimport type {\n  CombinedSearchParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParams\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams['preview'] || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams['perspective'],\n      viewport: routerSearchParams['viewport'],\n      inspect: routerSearchParams['inspect'],\n      rev: routerSearchParams['rev'],\n      since: routerSearchParams['since'],\n      template: routerSearchParams['template'],\n      templateParams: routerSearchParams['templateParams'],\n      view: routerSearchParams['view'],\n      // assist\n      pathKey: routerSearchParams['pathKey'],\n      instruction: routerSearchParams['instruction'],\n      // comments\n      comment: routerSearchParams['comment'],\n      changesInspectorTab: routerSearchParams['changesInspectorTab'] as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state['id']) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import type {Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n\n    return\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, useCurrentUser, type SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\nimport {API_VERSION} from './constants'\nimport {useActiveWorkspace} from './internals'\nimport type {PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import type {StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\nimport type {ConnectionStatus} from './types'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * @returns {[string, (event: StatusEvent) => void]} - An array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [ConnectionStatus, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: ConnectionStatus; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const status = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'connecting')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        const status = event.status === 'handshaking' ? 'connecting' : event.status\n        next.set(event.connection, {status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [status, setStatusFromEvent]\n}\n","import {\n  createCompatibilityActors,\n  isAltKey,\n  isHotkey,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  createConnectionMachine,\n  createController,\n  type Controller,\n  type Message,\n} from '@sanity/comlink'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react'\nimport {useDataset, useProjectId, type Path, type SanityDocument, type Tool} from 'sanity'\nimport {useRouter, type RouterContextValue} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  LIVE_DRAFT_EVENTS_ENABLED,\n} from './constants'\nimport PostMessageFeatures from './features/PostMessageFeatures'\nimport {useUnique, useWorkspace, type CommentIntentGetter} from './internals'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport type {\n  FrameState,\n  PresentationNavigate,\n  PresentationPerspective,\n  PresentationPluginOptions,\n  PresentationStateParams,\n  PresentationViewport,\n  StructureDocumentPaneParams,\n  VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\nconst PostMessageTelemetry = lazy(() => import('./PostMessageTelemetry'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n}): ReactElement {\n  const {canCreateUrlPreviewSecrets, canToggleSharePreviewAccess, canUseSharedPreviewAccess, tool} =\n    props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams['perspective'] === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams['preview'] || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        handleNavigate({}, {preview: url})\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    // @todo This won't work for multiple window contexts?\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          // Make sure the iframe is unmounted if the targetOrigin has changed\n                          key={targetOrigin}\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller &&\n          (LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          ))}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && <PostMessageDocuments comlink={visualEditingComlink} />}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && <PostMessageTelemetry comlink={visualEditingComlink} />}\n        {params.id && params.type && (\n          <RevisionSwitcher\n            documentId={params.id}\n            documentRevision={params.rev}\n            documentType={params.type}\n            navigate={navigate}\n            perspective={perspective}\n          />\n        )}\n      </Suspense>\n    </>\n  )\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState, type ReactElement} from 'react'\nimport {useGrantsStore, useTranslation, type PermissionCheckResult, type Tool} from 'sanity'\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport type {PresentationPluginOptions} from './types'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  if (\n    willGeneratePreviewUrlSecret &&\n    (!previewAccessSharingCreatePermission ||\n      typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n      !previewAccessSharingUpdatePermission ||\n      typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n      !previewUrlSecretPermission ||\n      !previewAccessSharingReadPermission ||\n      typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n      typeof previewUrlSecretPermission.granted === 'undefined')\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["channelsToComlinkMap","MSG_HANDSHAKE_SYN","MSG_HANDSHAKE_SYN_ACK","MSG_HANDSHAKE_ACK","MSG_RESPONSE","MSG_HEARTBEAT","MSG_DISCONNECT","comlinkToChannelsMap","convertToComlinkEvent","event","data","domain","DOMAIN","to","from","channelId","connectionId","type","convertToChannelsMessage","comlinkMessage","rest","message","responseTo","id","sendAsChannelsMessage","context","params","sources","targetOrigin","forEach","source","postMessage","createCompatibilityActors","listen","createListenLogic","requestMachine","createRequestMachine","provide","actions","PostMessageFeatures","props","$","_c","comlink","t0","t1","on","_temp","useEffect","memo","features","optimistic","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","children","Symbol","for","sharedState","useRef","t2","state","current","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","PanelsContext","createContext","displayName","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","Error","getPanelStyle","registerElement","unregisterElement","style","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","error","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","draft","published","getPreviewValueWithFallback","byteToHex","push","toString","slice","unsafeStringify","arr","toLowerCase","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","randomUUID","v4","buf","native","rnds","random","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","PresentationParamsProvider","PresentationProvider","name","IFrameElement","motion","create","iframe","IFrameOverlay","Box","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","currentTarget","href","handleOpenPopup","LaunchIcon","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","perspective","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","url","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","PERSPECTIVE_TITLE_KEY","previewDrafts","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","loadersConnection","onPathChange","onRefresh","overlaysConnection","previewUrl","setPerspective","setViewport","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","URL","pathname","search","withoutSecretSearchParams","PanelLeftIcon","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","RefreshIcon","t30","t31","t32","t33","t34","t35","t36","t37","ChevronDownIcon","t38","t39","t40","t41","createElement","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","MobileDeviceIcon","DesktopIcon","t76","t77","t78","t79","PreviewHeader","renderDefault","header","minHeight","usePresentationPreviewHeader","MotionFlex","Preview","forwardedRef","prefersReducedMotion","usePrefersReducedMotion","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","duration","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","useEffectOnChange","_callback","initialValue","comparator","previousValueRef","callback","useEffectEvent","RevisionSwitcher","documentRevision","editState","useEditState","rev","_updatedAt","_rev","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","setPublished","setPreviewDrafts","urlRef","setDocumentsOnPage","sourceDocuments","documents","sourceDocument","_projectId","setCache","cache","isEqual","uniqueDocuments","doc","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","base","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","open","Set","add","unsubs","size","source_0","closed","addTarget","interval","setInterval","source_1","source_2","POPUP_CHECK_INTERVAL","clearInterval","unsub","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspace","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","status_1","connection","hasConnected_0","hasConnected","status_2","setStatusFromEvent","status_0","LoaderQueries","PostMessageDocuments","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PostMessageTelemetry","PresentationTool","tool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","actors","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","fallback","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","LIVE_DRAFT_EVENTS_ENABLED","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","x_google_ignoreList":[16,17,18,19]}