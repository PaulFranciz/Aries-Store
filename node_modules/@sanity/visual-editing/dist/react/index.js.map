{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/ElementOverlay.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/sendTelemetry.ts","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/useController.tsx","../../src/ui/Refresh.tsx","../../src/ui/useDatasetMutator.ts","../../src/optimistic/state/createSharedListener.ts","../../src/ui/VisualEditing.tsx","../../src/ui/useComlink.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@repo/visual-editing-helpers'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n    }\n  }, [node, onDismiss])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {pathToUrlString} from '@repo/visual-editing-helpers'\nimport {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is ReactElement => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingBottom={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n\n      {title && (\n        <Tab gap={1} paddingBottom={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {SanityNode, VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {useEffect, useMemo, useState, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@repo/visual-editing-helpers'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {defineEvent} from '@sanity/telemetry'\nimport type {VisualEditingNode} from '../../types'\n\nconst events = {\n  'Visual Editing Drag Sequence Completed': defineEvent({\n    name: 'Visual Editing Drag Sequence Completed',\n    description: 'An array is successfully reordered using drag and drop.',\n    version: 1,\n  }),\n}\n\ntype EventDataMap = {\n  [K in keyof typeof events]: (typeof events)[K] extends ReturnType<typeof defineEvent<infer T>>\n    ? T\n    : never\n}\n\nfunction sendTelemetry<K extends keyof typeof events>(\n  name: K,\n  data: EventDataMap[K] extends void ? null | undefined : EventDataMap[K],\n  comlink: VisualEditingNode | undefined,\n): void {\n  if (!comlink) return\n\n  const event = events[name]\n\n  if (!event) {\n    throw new Error(`Telemetry event: ${name} does not exist`)\n  } else {\n    comlink.post('visual-editing/telemetry-log', {event, data})\n  }\n}\n\nexport {sendTelemetry}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\nimport type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return {\n          ...sanity,\n          id: 'isDraft' in sanity ? `${DRAFTS_PREFIX}${sanity.id}` : sanity.id,\n        }\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {isAltKey, isHotkey, type VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {Status} from '@sanity/comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {sendTelemetry} from './telemetry/sendTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null, comlink)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if ((inFrame && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n      <LayerProvider>\n        <PortalProvider element={rootElement}>\n          <SchemaProvider comlink={comlink} elements={elements}>\n            <PreviewSnapshotsProvider comlink={comlink}>\n              <SharedStateProvider comlink={comlink}>\n                <Root\n                  data-fading-out={fadingOut ? '' : undefined}\n                  data-overlays={overlaysFlash ? '' : undefined}\n                  ref={setRootElement}\n                  $zIndex={zIndex}\n                >\n                  <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                  <OverlaysController\n                    comlink={comlink}\n                    dispatch={dispatch}\n                    inFrame={inFrame}\n                    onDrag={updateDragPreviewCustomProps}\n                    overlayEnabled={overlayEnabled}\n                    rootElement={rootElement}\n                  />\n                  {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                  {elementsToRender}\n\n                  {isDragging && !dragMinimapTransition && (\n                    <>\n                      {dragInsertPosition && (\n                        <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                      )}\n                      {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                      {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                    </>\n                  )}\n                  {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                </Root>\n              </SharedStateProvider>\n            </PreviewSnapshotsProvider>\n          </SchemaProvider>\n        </PortalProvider>\n      </LayerProvider>\n    </ThemeProvider>\n  )\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>()\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, optimisticActorReady])\n\n  return overlayController\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      comlink\n        .fetch('visual-editing/features', undefined, {\n          signal: featuresFetch.signal,\n          suppressWarnings: true,\n        })\n        .then((data) => {\n          if (data.features['optimistic']) {\n            setActor(mutator)\n          }\n        })\n        .catch(() => {\n          // eslint-disable-next-line no-console\n          console.warn(\n            '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n          )\n        })\n    }, 'connected')\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","import {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  useEffect(() => setInFrame(window.self !== window.top || Boolean(window.opener)), [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const comlink = useComlink(inFrame === true)\n  useDatasetMutator(comlink)\n\n  const children = (\n    <>\n      {inFrame !== null && (\n        <Overlays\n          comlink={comlink}\n          componentResolver={components}\n          inFrame={inFrame}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {createNode, createNodeMachine} from '@sanity/comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active: boolean = true): VisualEditingNode | undefined {\n  const [node, setNode] = useState<VisualEditingNode>()\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n\n    let timeout = 0\n    const stop = instance.start()\n    // Wait with forwarding the comlink until the connection is established\n    const unsubscribe = instance.onStatus(() => {\n      // Due to race conditions in when Presentation Tool loads up components with handlers for comlink, we need to wait a bit before forwarding the comlink instance\n      timeout = window.setTimeout(() => {\n        setNode(instance)\n      }, 3_000)\n    }, 'connected')\n\n    return () => {\n      clearTimeout(timeout)\n      unsubscribe()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  return node\n}\n"],"names":["jsx","jsxs","Fragment","c","useEffect","createContext","useContext","useState","memo","useRef","isValidElement","useSyncExternalStore","useReducer","createPortal","isAltKey","isHotkey","createCompatibilityActors","InsertAboveIcon","InsertBelowIcon","getNodeIcon","CopyIcon","RemoveIcon","SortIcon","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","InsertMenu","MenuGroup","MenuDivider","Box","Text","Spinner","Stack","Flex","Menu","Popover","PopoverPortal","MenuItem","dt","Card","PointerEvents","DocumentIcon","DragHandleIcon","usePrefersDark","useTheme_v2","Hotkeys","ExpandIcon","LayerProvider","PortalProvider","ThemeProvider","studioTheme","isHTMLAnchorElement","isHTMLElement","useDocuments","getArrayItemKeyAndParentPath","get","getArrayInsertPatches","getArrayMovePatches","getArrayRemovePatches","getArrayDuplicatePatches","useOptimisticActorReady","useOptimisticActor","getDraftId","getPublishedId","SharedStateContext","createOverlayController","sanityNodesExistInSameArray","u","at","remove","insert","createEditUrl","studioPath","pathToUrlString","DRAFTS_PREFIX","scrollIntoView","createNode","createNodeMachine","createActor","setActor","e","ReplaySubject","Subject","merge","createDatasetMutator","createDocumentMutator","History","props","$","_c","comlink","history","t0","t1","t2","t3","on","data","update","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","_temp","event","customEvent","CustomEvent","detail","cancelable","window","dispatchEvent","SchemaContext","useSchema","context","Error","getArrayRemoveAction","node","doc","type","patch","async","getSnapshot","getArrayInsertAction","insertType","position","getDuplicateAction","getContextMenuItems","field","parent","items","push","getDuplicateItem","getRemoveItems","getMoveItems","label","icon","action","name","getContextMenuArrayItems","options","insertMenu","width","views","some","view","undefined","component","boundaryElement","InsertMenuWrapper","onSelect","schemaType","of","filter","item","map","t","getContextMenuUnionItems","Promise","resolve","withDivider","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","length","t4","Symbol","for","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","fontSize","popover","space","POPOVER_MARGINS","ContextMenuItem","onDismiss","onClick","hotkeys","text","disabled","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","getField","getDocument","setItems","t6","fetchContextMenuItems","id","items_0","getBoundingClientRect","bottom","left","right","top","height","contextMenuReferenceElement","t7","t8","t9","t10","minWidth","maxWidth","flex","size","t11","t12","t13","t14","t15","children","weight","gap","i","style","t16","t17","t18","t19","t20","open","content","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","Root","styled","Actions","ActionOpen","Tab","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","bb0","find","snapshot","_id","bb1","value","componentContext","customComponents","resolved","isReactElementOverlayComponent","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","paddingBottom","Link","marginRight","className","props_0","ElementOverlay","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","scrolledIntoViewRef","w","h","transform","current","behavior","actions","block","inline","scrollMode","_temp2","_temp3","as","rel","onStoreChange","handlePopState","addEventListener","removeEventListener","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","markerThickness","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","theme","radius","number","inMin","inMax","outMin","outMax","clamp","childRects","imageRects","textRects","color","from","r_1","r","fill","viewBox","shadow","overflow","tone","scheme","tagName","r_0","OverlayMinimapPrompt","align","keys","elementsReducer","elements","message","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","snapshots","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","signal","response","fetch","suppressWarnings","fetchSchema","schemaFetch","AbortController","unsub","onStatus","abort","reportedPathsRef","reportPaths","controller","paths_0","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","paths","p","signal_0","response_0","types","_type","node_0","schemaType_0","nodePath","flatMap","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","Boolean","console","warn","store","initialState","listeners","Set","getState","setState","fn","forEach","l","add","listener","delete","createStore","SharedStateProvider","catch","value_0","prev","key","Object","fromEntries","entries","reason","debug","events","description","version","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","id_0","send","documentId","id_1","OverlaysController","dispatch","inFrame","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","arrayPath","referenceItemKey","elementValue","getFromPath","_key","useDragEndEvents","enabled","dragGroup","flow","sendTelemetry","cursor","removeProperty","useController","overlayController","optimisticActorReady","overlayElement","destroy","activate","deactivate","Overlays","_componentResolver","status","setStatus","setRootElement","setOverlayEnabled","unsubs","data_0","status_0","usePerspectiveSync","then","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","a","b","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","_temp5","handleKeydown","_temp6","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","elementsToRender","t21","t22","t23","t24","t25","t26","t27","prevId","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useDatasetMutator","incomingConnection$","incomingMutations$","createSharedListener","datasetMutator","mutator","input","client","withConfig","sharedListener","start","featuresFetch","features","optimistic","stop","VisualEditing","components","portal","setInFrame","self","opener","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","active","setNode","instance","connectTo","provide","actors","timeout","unsubscribe","useComlink","displayName"],"mappings":"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"}