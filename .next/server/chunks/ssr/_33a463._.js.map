{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/components/common/Navigation/NavItemComponent.tsx"],"sourcesContent":["// components/common/Navigation/NavItemComponent.tsx\nimport React, { useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { cn } from '@/lib/utils';\nimport { NavItemProps } from '@/types/navigation';\nimport gsap from 'gsap';\n\nexport const NavItemComponent: React.FC<NavItemProps> = ({\n  item,\n  isOpen,\n  onMouseEnter,\n  onMouseLeave,\n}) => {\n  const submenuRef = useRef<HTMLDivElement>(null);\n  const pathname = usePathname();\n  const isActive = pathname === item.href;\n\n  useEffect(() => {\n    if (!submenuRef.current) return;\n\n    if (isOpen) {\n      gsap.to(submenuRef.current, {\n        opacity: 1,\n        y: 0,\n        duration: 0.3,\n        ease: 'power2.out',\n        pointerEvents: 'auto',\n      });\n    } else {\n      gsap.to(submenuRef.current, {\n        opacity: 0,\n        y: -10,\n        duration: 0.2,\n        ease: 'power2.in',\n        pointerEvents: 'none',\n      });\n    }\n  }, [isOpen]);\n\n  return (\n    <div\n      className=\"relative\"\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      <Link\n        href={item.href}\n        className={cn(\n          'px-4 py-2 text-sm font-medium transition-colors hover:text-gray-900',\n          isActive ? 'text-gray-900' : 'text-gray-600'\n        )}\n      >\n        {item.title}\n      </Link>\n      {item.submenu && (\n        <div\n          ref={submenuRef}\n          className=\"absolute left-0 z-50 w-screen bg-white opacity-0 -translate-y-2 top-full\"\n          style={{ pointerEvents: 'none' }}\n        >\n          <div className=\"grid max-w-7xl grid-cols-2 gap-8 px-8 py-6 mx-auto\">\n            {item.submenu.map((section: { title: string | number | bigint | boolean | React.ReactElement<unknown, string | React.JSXElementConstructor<any>> | Iterable<React.ReactNode> | React.ReactPortal | Promise<string | number | bigint | boolean | React.ReactPortal | React.ReactElement<unknown, string | React.JSXElementConstructor<any>> | Iterable<React.ReactNode> | null | undefined> | Iterable<React.ReactNode> | null | undefined; items: any[]; }, idx: React.Key | null | undefined) => (\n              <div key={idx} className=\"space-y-4\">\n                <h3 className=\"text-sm font-medium text-gray-900\">\n                  {section.title}\n                </h3>\n                <ul className=\"space-y-2\">\n                  {section.items.map((subItem, subIdx) => (\n                    <li key={subIdx}>\n                      <Link\n                        href={subItem.href}\n                        className=\"text-sm text-gray-600 transition-colors hover:text-gray-900\"\n                      >\n                        {subItem.title}\n                      </Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,oDAAoD;;;;;AACpD;AACA;AACA;AACA;;;;;;AADA;;;;;;;AAKO,MAAM,mBAA2C,CAAC,EACvD,IAAI,EACJ,MAAM,EACN,YAAY,EACZ,YAAY,EACb;IACC,MAAM,aAAa,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAC1C,MAAM,WAAW,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,WAAW,aAAa,KAAK,IAAI;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,WAAW,OAAO,EAAE;QAEzB,IAAI,QAAQ;YACV,KAAK,EAAE,CAAC,WAAW,OAAO,EAAE;gBAC1B,SAAS;gBACT,GAAG;gBACH,UAAU;gBACV,MAAM;gBACN,eAAe;YACjB;QACF,OAAO;YACL,KAAK,EAAE,CAAC,WAAW,OAAO,EAAE;gBAC1B,SAAS;gBACT,GAAG,CAAC;gBACJ,UAAU;gBACV,MAAM;gBACN,eAAe;YACjB;QACF;IACF,GAAG;QAAC;KAAO;IAEX,qBACE,8OAAC;QACC,WAAU;QACV,cAAc;QACd,cAAc;;0BAEd,8OAAC,4JAAA,CAAA,UAAI;gBACH,MAAM,KAAK,IAAI;gBACf,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uEACA,WAAW,kBAAkB;0BAG9B,KAAK,KAAK;;;;;;YAEZ,KAAK,OAAO,kBACX,8OAAC;gBACC,KAAK;gBACL,WAAU;gBACV,OAAO;oBAAE,eAAe;gBAAO;0BAE/B,cAAA,8OAAC;oBAAI,WAAU;8BACZ,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,SAAya,oBAC1b,8OAAC;4BAAc,WAAU;;8CACvB,8OAAC;oCAAG,WAAU;8CACX,QAAQ,KAAK;;;;;;8CAEhB,8OAAC;oCAAG,WAAU;8CACX,QAAQ,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,uBAC3B,8OAAC;sDACC,cAAA,8OAAC,4JAAA,CAAA,UAAI;gDACH,MAAM,QAAQ,IAAI;gDAClB,WAAU;0DAET,QAAQ,KAAK;;;;;;2CALT;;;;;;;;;;;2BANL;;;;;;;;;;;;;;;;;;;;;AAuBxB"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/components/common/data.ts"],"sourcesContent":["// components/common/Navigation/data.ts\nimport { NavItemType } from '@/types/navigation';\n\nexport const navigationItems: NavItemType[] = [\n  {\n    title: 'SALE',\n    href: '/sale',\n  },\n  {\n    title: 'BAGS',\n    href: '/bags',\n    submenu: [\n      {\n        title: 'Categories',\n        items: [\n          { title: 'All Bags', href: '/bags' },\n          { title: 'New Arrivals', href: '/bags/new-arrivals' },\n          { title: 'Best Sellers', href: '/bags/best-sellers' },\n        ],\n      },\n      {\n        title: 'Collections',\n        items: [\n          { title: 'Evening Bags', href: '/bags/evening' },\n          { title: 'Tote Bags', href: '/bags/tote' },\n          { title: 'Crossbody Bags', href: '/bags/crossbody' },\n        ],\n      },\n    ],\n  },\n];\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;AAGhC,MAAM,kBAAiC;IAC5C;QACE,OAAO;QACP,MAAM;IACR;IACA;QACE,OAAO;QACP,MAAM;QACN,SAAS;YACP;gBACE,OAAO;gBACP,OAAO;oBACL;wBAAE,OAAO;wBAAY,MAAM;oBAAQ;oBACnC;wBAAE,OAAO;wBAAgB,MAAM;oBAAqB;oBACpD;wBAAE,OAAO;wBAAgB,MAAM;oBAAqB;iBACrD;YACH;YACA;gBACE,OAAO;gBACP,OAAO;oBACL;wBAAE,OAAO;wBAAgB,MAAM;oBAAgB;oBAC/C;wBAAE,OAAO;wBAAa,MAAM;oBAAa;oBACzC;wBAAE,OAAO;wBAAkB,MAAM;oBAAkB;iBACpD;YACH;SACD;IACH;CACD"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 210, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/components/common/Navigation.tsx"],"sourcesContent":["// components/common/Navigation/NavigationMenu.tsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport { NavItemComponent } from '@/components/common/Navigation/NavItemComponent';\nimport { navigationItems } from './data';\nimport gsap from 'gsap';\n\nexport const NavigationMenu: React.FC = () => {\n  const [openMenu, setOpenMenu] = useState<string | null>(null);\n  const navigationRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    gsap.from(navigationRef.current?.children || [], {\n      opacity: 0,\n      y: -20,\n      stagger: 0.1,\n      duration: 0.6,\n      ease: 'power2.out',\n    });\n  }, []);\n\n  return (\n    <div className=\"hidden md:flex md:space-x-8\" ref={navigationRef}>\n      {navigationItems.map((item) => (\n        <NavItemComponent\n          key={item.title}\n          item={item}\n          isOpen={openMenu === item.title}\n          onMouseEnter={() => setOpenMenu(item.title)}\n          onMouseLeave={() => setOpenMenu(null)}\n        />\n      ))}\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,kDAAkD;;;;;AAClD;AACA;AACA;;;;;;;;;;;AAGO,MAAM,iBAA2B;IACtC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,KAAK,IAAI,CAAC,cAAc,OAAO,EAAE,YAAY,EAAE,EAAE;YAC/C,SAAS;YACT,GAAG,CAAC;YACJ,SAAS;YACT,UAAU;YACV,MAAM;QACR;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;QAA8B,KAAK;kBAC/C,4HAAA,CAAA,kBAAe,CAAC,GAAG,CAAC,CAAC,qBACpB,8OAAC,uJAAA,CAAA,mBAAgB;gBAEf,MAAM;gBACN,QAAQ,aAAa,KAAK,KAAK;gBAC/B,cAAc,IAAM,YAAY,KAAK,KAAK;gBAC1C,cAAc,IAAM,YAAY;eAJ3B,KAAK,KAAK;;;;;;;;;;AASzB"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/app/layout.tsx"],"sourcesContent":["// app/layout.tsx\n\nimport { NavigationMenu } from \"@/components/common/Navigation\";\n\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body>\n       <NavigationMenu />\n        {children}\n      </body>\n    </html>\n  );\n}"],"names":[],"mappings":"AAAA,iBAAiB;;;;;AAEjB;;;AAGe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;;8BACA,8OAAC,mIAAA,CAAA,iBAAc;;;;;gBACb;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}