{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/sanity/env.ts"],"sourcesContent":["export const apiVersion =\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || '2024-12-31'\n\nexport const dataset = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_DATASET'\n)\n\nexport const projectId = assertValue(\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\n  'Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID'\n)\n\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\n  if (v === undefined) {\n    throw new Error(errorMessage)\n  }\n\n  return v\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aACX,kDAA8C;AAEzC,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAGF,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from 'next-sanity'\n\nimport { apiVersion, dataset, projectId } from '../env'\n\nexport const client = createClient({\n  projectId,\n  dataset,\n  apiVersion,\n  useCdn: true, // Set to false if statically generating pages, using ISR or tag-based revalidation\n})\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AAIO,MAAM,SAAS,CAAA,GAAA,8KAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,6GAAA,CAAA,YAAS;IACT,SAAA,6GAAA,CAAA,UAAO;IACP,YAAA,6GAAA,CAAA,aAAU;IACV,QAAQ;AACV"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/lib/queries/navigation.ts"],"sourcesContent":["export const getNavigationQuery = `\n  *[_type == \"category\" && isMainCategory == true] {\n    _id,\n    title,\n    \"slug\": slug.current,\n    mainCategoryType,\n    \"subcategories\": *[_type == \"category\" && references(^._id)] {\n      _id,\n      title,\n      \"slug\": slug.current,\n      subcategoryType\n    }\n  }\n`\n\n"],"names":[],"mappings":";;;AAAO,MAAM,qBAAqB,CAAC;;;;;;;;;;;;;AAanC,CAAC"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/components/common/Navigation/NavigationBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavigationBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavigationBar() from the server but NavigationBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/common/Navigation/NavigationBar.tsx <module evaluation>\",\n    \"NavigationBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,gFACA"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/components/common/Navigation/NavigationBar.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const NavigationBar = registerClientReference(\n    function() { throw new Error(\"Attempted to call NavigationBar() from the server but NavigationBar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/common/Navigation/NavigationBar.tsx\",\n    \"NavigationBar\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,4DACA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/ella/Desktop/Aries/app/page.tsx"],"sourcesContent":["import { client } from '@/sanity/lib/client'\nimport { getNavigationQuery } from '@/lib/queries/navigation'\nimport { NavigationBar } from '@/components/common/Navigation/NavigationBar'\nimport type { MainCategory } from '@/types/navigation'\n\nasync function getCategories(): Promise<MainCategory[]> {\n  return await client.fetch(getNavigationQuery)\n}\n\nexport default async function Home() {\n  const categories = await getCategories()\n\n  return (\n    <main>\n      <NavigationBar categories={categories} />\n      {/* Rest of your page content */}\n    </main>\n  )\n}\n\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAGA,eAAe;IACb,OAAO,MAAM,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,4HAAA,CAAA,qBAAkB;AAC9C;AAEe,eAAe;IAC5B,MAAM,aAAa,MAAM;IAEzB,qBACE,8OAAC;kBACC,cAAA,8OAAC,oJAAA,CAAA,gBAAa;YAAC,YAAY;;;;;;;;;;;AAIjC"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}