{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"version.mjs","sources":["file:///Users/ella/Desktop/Aries/node_modules/sanity/src/core/version.ts"],"sourcesContent":["import {version} from '../../package.json'\n/**\n * This version is provided by `@sanity/pkg-utils` at build time\n * @hidden\n * @beta\n */\nexport const SANITY_VERSION = process.env.PKG_VERSION || `${version}-development`\n"],"names":["SANITY_VERSION"],"mappings":";;;AAMO,MAAMA,iBAAiB","ignoreList":[0]}},
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"file":"generate-help-url.esm.mjs","sources":["file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/conditionalWrapper/ConditionalWrapper.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/button/Button.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/dialog/Dialog.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/errorBoundary/ErrorBoundary.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/menuButton/MenuButton.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/menuGroup/MenuGroup.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/core/components/Hotkeys.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/menuItem/MenuItem.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/popover/Popover.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/tab/Tab.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/tooltip/constants.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/tooltip/Tooltip.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider.tsx","file:///Users/ella/Desktop/Aries/node_modules/.pnpm/%40sanity%2Bgenerate-help-url%403.0.0/node_modules/%40sanity/generate-help-url/dist/generate-help-url.esm.js"],"sourcesContent":["export type ConditionalWrapperRenderWrapperCallback = (children: React.ReactNode) => React.ReactNode\n\n/**\n * A helper component that conditionally wraps its children in a wrapper component.\n *\n * @internal\n */\nexport function ConditionalWrapper({\n  children,\n  condition,\n  wrapper,\n}: {\n  children: React.ReactNode\n  condition: boolean\n  wrapper: ConditionalWrapperRenderWrapperCallback\n}): React.ReactNode {\n  if (!condition) {\n    return children\n  }\n\n  return wrapper(children)\n}\n","/* eslint-disable no-restricted-imports */\n\nimport {Button as UIButton, type ButtonProps as UIButtonProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps, useCallback} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\ntype BaseButtonProps = Pick<\n  UIButtonProps,\n  | 'as'\n  | 'icon'\n  | 'iconRight'\n  | 'justify'\n  | 'loading'\n  | 'mode'\n  | 'paddingY'\n  | 'selected'\n  | 'tone'\n  | 'type'\n  | 'width'\n> & {\n  size?: 'default' | 'large'\n}\n\ntype ButtonWithText = {\n  text: string\n  tooltipProps?: TooltipProps | null\n  icon?: UIButtonProps['icon']\n}\n\ntype IconButton = {\n  text?: undefined\n  icon?: UIButtonProps['icon']\n  /**\n   * When using a button with an icon, tooltipProps are required to enforce consistency in UI.\n   */\n  tooltipProps: TooltipProps | null\n}\n\n/** @internal */\nexport type ButtonProps = BaseButtonProps & (ButtonWithText | IconButton)\n\nconst LARGE_BUTTON_PROPS = {\n  space: 3,\n  padding: 3,\n}\nconst DEFAULT_BUTTON_PROPS = {\n  space: 2,\n  padding: 2,\n}\n\nconst TooltipButtonWrapper = styled.span`\n  display: inline-flex;\n`\n/**\n * Customized Sanity UI <Button> with pre-defined layout options.\n *\n * @internal\n */\nexport const Button = forwardRef(function Button(\n  {\n    size = 'default',\n    mode = 'default',\n    paddingY,\n    tone = 'default',\n    tooltipProps,\n    ...rest\n  }: ButtonProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size' | 'title'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This span is needed to make the tooltip work in disabled buttons */}\n          <TooltipButtonWrapper>{children}</TooltipButtonWrapper>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  const sizeProps = size === 'default' ? DEFAULT_BUTTON_PROPS : LARGE_BUTTON_PROPS\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIButton {...rest} {...sizeProps} paddingY={paddingY} ref={ref} mode={mode} tone={tone} />\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  Box,\n  type BoxHeight,\n  Button as UIButton,\n  Dialog as UIDialog,\n  type DialogProps as UIDialogProps,\n  Flex,\n} from '@sanity/ui'\nimport {type ComponentProps, forwardRef, type HTMLProps, type ReactNode, type Ref} from 'react'\nimport {useTranslation} from 'react-i18next'\n\n/** @internal */\nexport type DialogProps = Pick<\n  UIDialogProps,\n  | '__unstable_autoFocus'\n  | '__unstable_hideCloseButton'\n  | 'contentRef'\n  | 'header'\n  | 'id'\n  | 'onActivate'\n  | 'onClickOutside'\n  | 'onClose'\n  | 'portal'\n  | 'position'\n  | 'scheme'\n  | 'width'\n> & {\n  /**\n   * Dialog body height.\n   * Set this to 'fill' (i.e. 100%) if you want overflow body content to be contained\n   * and not trigger dynamic border visibility.\n   */\n  bodyHeight?: BoxHeight\n  children?: ReactNode\n  footer?: {\n    cancelButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n    confirmButton?: Omit<ComponentProps<typeof UIButton>, 'fontSize' | 'padding'>\n  }\n  /**\n   * If enabled, removes all default padding from dialog content.\n   */\n  padding?: boolean\n}\n\n/**\n * Customized Sanity UI <Dialog> that enforces an opinionated footer layout with a max of two buttons (confirm and cancel).\n *\n * @internal\n */\nexport const Dialog = forwardRef(function Dialog(\n  {\n    bodyHeight,\n    children,\n    footer,\n    padding = true,\n    ...props\n  }: DialogProps & Pick<HTMLProps<HTMLDivElement>, 'onDragEnter' | 'onDrop'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const {t} = useTranslation()\n\n  return (\n    <UIDialog\n      {...props}\n      animate\n      ref={ref}\n      footer={\n        (footer?.confirmButton || footer?.cancelButton) && (\n          <Flex width=\"full\" gap={3} justify=\"flex-end\" padding={3}>\n            {props.onClose && (\n              <UIButton\n                mode=\"bleed\"\n                padding={2}\n                text={t('common.dialog.cancel-button.text')}\n                tone=\"default\"\n                onClick={props.onClose}\n                data-testid=\"cancel-button\"\n                {...footer.cancelButton}\n              />\n            )}\n            {footer.confirmButton && (\n              <UIButton\n                mode=\"default\"\n                padding={2}\n                text={t('common.dialog.confirm-button.text')}\n                tone=\"critical\"\n                data-testid=\"confirm-button\"\n                {...footer.confirmButton}\n              />\n            )}\n          </Flex>\n        )\n      }\n    >\n      <Box height={bodyHeight} padding={padding ? 4 : 0}>\n        {children}\n      </Box>\n    </UIDialog>\n  )\n})\n","import {\n  // eslint-disable-next-line no-restricted-imports\n  ErrorBoundary as UIErrorBoundary,\n  type ErrorBoundaryProps as UIErrorBoundaryProps,\n} from '@sanity/ui'\nimport {useCallback, useContext} from 'react'\n\nimport {SourceContext} from '../../_singletons'\n\nexport type ErrorBoundaryProps = UIErrorBoundaryProps\n\n/**\n * ErrorBoundary component that catches errors and uses onUncaughtError config property\n * It also calls the onCatch prop if it exists.\n */\nexport function ErrorBoundary({onCatch, ...rest}: ErrorBoundaryProps): React.JSX.Element {\n  // Use context, because source could be undefined and we don't want to throw in that case\n  const source = useContext(SourceContext)\n\n  const handleCatch = useCallback(\n    ({error: caughtError, info: caughtInfo}: {error: Error; info: React.ErrorInfo}) => {\n      // Send the error to the source if it has an onUncaughtError method\n      source?.onUncaughtError?.(caughtError, caughtInfo)\n\n      // Call the onCatch prop if it exists\n      onCatch?.({error: caughtError, info: caughtInfo})\n    },\n    [source, onCatch],\n  )\n\n  return <UIErrorBoundary {...rest} onCatch={handleCatch} />\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  MenuButton as UIMenuButton,\n  type MenuButtonProps as UIMenuButtonProps,\n  type PopoverProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\n/** @internal */\nexport type MenuButtonProps = Omit<UIMenuButtonProps, 'popover'> & {\n  popover?: Omit<PopoverProps, 'animate' | 'content' | 'open'>\n}\n\n/**\n * Customized Sanity UI <MenuButton> that enforces popover animation.\n *\n * @internal\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return (\n    <UIMenuButton\n      {...props}\n      ref={ref}\n      popover={{\n        ...props.popover,\n        animate: true,\n      }}\n    />\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {MenuGroup as UIMenuGroup, type MenuGroupProps as UIMenuGroupProps} from '@sanity/ui'\nimport {type HTMLProps} from 'react'\n\n/** @internal */\nexport type MenuGroupProps = Pick<UIMenuGroupProps, 'icon' | 'popover' | 'text' | 'tone'>\n\n/**\n * Customized Sanity UI <MenuGroup> component with pre-defined layout options.\n *\n * @internal\n */\nexport const MenuGroup = (\n  props: MenuGroupProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'tabIndex' | 'popover'>,\n) => {\n  return <UIMenuGroup {...props} fontSize={1} padding={3} />\n}\n","import {Hotkeys as UIHotkeys, type HotkeysProps as UIHotkeysProps} from '@sanity/ui'\nimport {type HTMLProps, type RefAttributes} from 'react'\n\n/**\n * Properties for the `Hotkeys` component.\n *\n * @public\n */\nexport type HotkeysProps = UIHotkeysProps & {\n  /**\n   * Whether to make the keys platform-aware (eg `alt` to `option` on Apple devices).\n   *\n   * @defaultValue true\n   */\n  makePlatformAware?: boolean\n} & Omit<HTMLProps<HTMLElement>, 'ref' | 'size' | 'as'> &\n  RefAttributes<HTMLElement>\n\n/**\n * Renders given `keys` as \"keycaps\" visually.\n *\n * This is a wrapper around `@sanity/ui`'s `Hotkeys` component, which allows for altering keys\n * (eg `alt` to `option`) on Apple devices unless `makePlatformAware` is set to `false`.\n *\n * @param props - Properties to render with\n * @returns React element\n * @public\n */\nexport function Hotkeys({makePlatformAware = true, keys: hotKeys = [], ...props}: HotkeysProps) {\n  const keys = makePlatformAware ? hotKeys.map(platformifyKey) : hotKeys\n  return <UIHotkeys {...props} keys={keys} />\n}\n\n/**\n * @internal\n */\nconst IS_APPLE_DEVICE =\n  typeof navigator === 'undefined' || typeof navigator.platform !== 'string'\n    ? false\n    : /Mac|iPod|iPhone|iPad/.test(navigator.platform || '')\n\n/**\n * Given key 'Alt', or 'Option' (case-insensitive), return the platform-appropriate key name\n * (eg 'Alt' on non-Apple devices, 'Option' on Apple devices).\n *\n * @param key - Key to platformify\n * @returns Platform-appropriate key name\n * @internal\n */\nfunction platformifyKey(key: string): string {\n  const lowerKey = key.toLowerCase()\n\n  if (lowerKey === 'alt' && IS_APPLE_DEVICE) {\n    return matchCase(key, 'option')\n  }\n\n  if (lowerKey === 'option' && !IS_APPLE_DEVICE) {\n    return matchCase(key, 'alt')\n  }\n\n  return key\n}\n\n/**\n * Apply the case (lowercase/uppercase) of `original` to `target`, character by character,\n * eg matching ALL CAPS, all lowercase or Mixed Case.\n *\n * @param original - The original string to match case of\n * @param target - The target string to apply case to\n * @returns Target string with case applied from original\n * @internal\n */\nfunction matchCase(original: string, target: string): string {\n  const orgLength = original.length\n\n  return target.replace(/./g, (char, i) => {\n    // Replace character by character matching case of original\n    // If running out of original, just return the target case as-is\n    return i < orgLength && original[i] === original[i].toUpperCase() ? char.toUpperCase() : char\n  })\n}\n","/* eslint-disable no-restricted-imports */\nimport {\n  Badge,\n  Box,\n  Flex,\n  MenuItem as UIMenuItem,\n  type MenuItemProps as UIMenuItemProps,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {\n  forwardRef,\n  type HTMLProps,\n  isValidElement,\n  type ReactNode,\n  type Ref,\n  useCallback,\n  useMemo,\n} from 'react'\nimport {isValidElementType} from 'react-is'\nimport {styled} from 'styled-components'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {Tooltip, type TooltipProps} from '..'\nimport {\n  ConditionalWrapper,\n  type ConditionalWrapperRenderWrapperCallback,\n} from '../conditionalWrapper'\n\nconst FONT_SIZE = 1\nconst SUBTITLE_FONT_SIZE = 0\n\n/* Using px value here to make title/subtitles align with icon */\nconst SubtitleText = styled(Text)`\n  margin-top: 2px;\n`\n\n/** @internal */\nexport type MenuItemProps = Pick<\n  UIMenuItemProps,\n  'as' | 'icon' | 'iconRight' | 'pressed' | 'selected' | 'tone' | 'hotkeys'\n> & {\n  badgeText?: string\n  /**\n   * Usage of `children` is not supported, import `MenuItem` from `@sanity/ui` instead.\n   */\n  children?: undefined\n  /**\n   * Previews should be 25x25.\n   */\n  preview?: ReactNode\n  /**\n   * Optional render callback which receives menu item content.\n   */\n  renderMenuItem?: (menuItemContent: React.JSX.Element) => ReactNode\n  text?: string\n  tooltipProps?: TooltipProps | null\n  /**\n   * Optional subtitle prop for the menu item.\n   * While not recommended, it is utilized for the workspace menu button.\n   */\n  __unstable_subtitle?: string\n  /**\n   * An optional property to adjust spacing in the preview between the icon and the text.\n   * Not recommended, but is applied to the workspace menu button..\n   */\n  __unstable_space?: number\n}\n\nconst PreviewWrapper = styled(Box)`\n  height: 25px;\n  width: 25px;\n  overflow: hidden;\n`\n\n/**\n * Customized Sanity UI <MenuItem> that restricts usage of `children` to encourage simple,\n * single line menu items.\n *\n * The workspace menu button needed a subtitle - hence, the StudioUI MenuIten now takes a subtitle prop.\n * This is only an escape hatch for the workspace menu button and is not recommended for general use.\n *\n * It also accepts a prop to attach tooltips as well as custom badges too.\n *\n * @internal\n */\nexport const MenuItem = forwardRef(function MenuItem(\n  {\n    badgeText,\n    children: childrenProp,\n    disabled,\n    hotkeys,\n    icon: Icon,\n    iconRight: IconRight,\n    preview = null,\n    renderMenuItem,\n    text,\n    tooltipProps,\n    __unstable_subtitle,\n    __unstable_space,\n    ...rest\n  }: MenuItemProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'selected' | 'tabIndex' | 'size'>,\n  ref: Ref<HTMLDivElement>,\n) {\n  const menuItemContent = useMemo(() => {\n    return (\n      <Flex align=\"center\" gap={2}>\n        {preview && (\n          <PreviewWrapper\n            style={{opacity: disabled ? 0.25 : undefined}}\n            paddingRight={__unstable_space ? 1 : 0}\n          >\n            <Flex align=\"center\" height=\"fill\" justify=\"center\">\n              {preview}\n            </Flex>\n          </PreviewWrapper>\n        )}\n        {Icon && (\n          <Box paddingRight={1}>\n            <Text size={FONT_SIZE}>\n              {isValidElement(Icon) && Icon}\n              {isValidElementType(Icon) && <Icon />}\n            </Text>\n          </Box>\n        )}\n        {text && (\n          <Stack\n            flex={1}\n            space={__unstable_subtitle ? 1 : 2}\n            paddingLeft={__unstable_subtitle ? 1 : 0}\n          >\n            <Text size={FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\">\n              {text}\n            </Text>\n            {__unstable_subtitle && (\n              <SubtitleText size={SUBTITLE_FONT_SIZE} textOverflow=\"ellipsis\" weight=\"medium\" muted>\n                {__unstable_subtitle}\n              </SubtitleText>\n            )}\n          </Stack>\n        )}\n        {(badgeText || hotkeys || IconRight) && (\n          <Flex align=\"center\" gap={3} marginLeft={3}>\n            {hotkeys && <Hotkeys keys={hotkeys} style={{marginTop: -4, marginBottom: -4}} />}\n\n            {badgeText && (\n              <Badge fontSize={0} style={{marginTop: -4, marginBottom: -4}}>\n                {badgeText}\n              </Badge>\n            )}\n\n            {IconRight && (\n              <Text size={FONT_SIZE}>\n                {isValidElement(IconRight) && IconRight}\n                {isValidElementType(IconRight) && <IconRight />}\n              </Text>\n            )}\n          </Flex>\n        )}\n      </Flex>\n    )\n  }, [\n    preview,\n    disabled,\n    __unstable_space,\n    Icon,\n    text,\n    __unstable_subtitle,\n    badgeText,\n    hotkeys,\n    IconRight,\n  ])\n\n  const renderWrapper = useCallback<ConditionalWrapperRenderWrapperCallback>(\n    (children) => {\n      return (\n        <Tooltip content={tooltipProps?.content} portal {...tooltipProps}>\n          {/* This div is needed to make the tooltip work in disabled menu items */}\n          <div>{children}</div>\n        </Tooltip>\n      )\n    },\n    [tooltipProps],\n  )\n\n  return (\n    <ConditionalWrapper condition={!!tooltipProps} wrapper={renderWrapper}>\n      <UIMenuItem\n        disabled={disabled}\n        paddingLeft={preview ? 1 : 3}\n        paddingRight={3}\n        paddingY={preview ? 1 : 3}\n        ref={ref}\n        {...rest}\n      >\n        {typeof childrenProp === 'undefined' && typeof renderMenuItem === 'function'\n          ? renderMenuItem(menuItemContent)\n          : menuItemContent}\n      </UIMenuItem>\n    </ConditionalWrapper>\n  )\n})\n","/* eslint-disable no-restricted-imports */\nimport {Popover as UIPopover, type PopoverProps as UIPopoverProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/** @internal */\nexport type PopoverProps = Omit<UIPopoverProps, 'animate'>\n\n/**\n * Customized Sanity UI <Popover> that forces `animate=true`\n *\n * All Popovers in the studio should be animated.\n *\n * @internal\n */\nexport const Popover = forwardRef(function Popover(\n  props: PopoverProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'width'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  return <UIPopover {...props} animate ref={ref} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {Tab as UITab, type TabProps as UITabProps} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\n/**\n * @internal\n *\n * Padding and font sizes are fixed in Studio UI <Tab> components.\n */\nexport type TabProps = Pick<\n  UITabProps,\n  'aria-controls' | 'focused' | 'icon' | 'id' | 'label' | 'selected' | 'tone'\n>\n\n/**\n * Customized Sanity UI <Tab> with limited layout options.\n *\n * @internal\n */\nexport const Tab = forwardRef(function Tab(\n  {tone = 'default', ...props}: TabProps & Omit<HTMLProps<HTMLButtonElement>, 'as' | 'size'>,\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  return <UITab {...props} muted padding={2} ref={ref} tone={tone} />\n})\n","export const TOOLTIP_DELAY_PROPS = {\n  open: 400,\n}\n","import {\n  Box,\n  Flex,\n  type HotkeysProps,\n  Text,\n  // eslint-disable-next-line no-restricted-imports\n  Tooltip as UITooltip,\n  // eslint-disable-next-line no-restricted-imports\n  type TooltipProps as UITooltipProps,\n} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {Hotkeys} from '../../core/components/Hotkeys'\nimport {TOOLTIP_DELAY_PROPS} from './constants'\n\n/** @internal */\n\nexport type TooltipProps = Omit<UITooltipProps, 'arrow' | 'padding' | 'shadow'> & {\n  hotkeys?: HotkeysProps['keys']\n}\n\nconst TOOLTIP_SHARED_PROPS: UITooltipProps = {\n  animate: true,\n  arrow: false,\n  boundaryElement: null,\n  delay: TOOLTIP_DELAY_PROPS,\n  fallbackPlacements: ['bottom-start', 'bottom-end', 'top-start', 'top-end'],\n  placement: 'bottom',\n  portal: true,\n}\n\n/**\n * Customized Sanity UI <Tooltip> with limited layout options and support for showing hotkeys.\n *\n * In just about all cases, its strongly recommended that you pass a string to the `content` prop.\n * This helps simplify i18n and encourages short and concise.\n *\n * Passing ReactNode values to `content` is supported, but discouraged.\n *\n * @internal\n */\nexport const Tooltip = forwardRef(function Tooltip(\n  props: TooltipProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {content, hotkeys, ...rest} = props\n\n  if (typeof content === 'string') {\n    return (\n      <UITooltip\n        {...TOOLTIP_SHARED_PROPS}\n        content={\n          <Flex align=\"center\">\n            {content && (\n              <Box flex={1} padding={1}>\n                <Text size={1}>{content}</Text>\n              </Box>\n            )}\n            {hotkeys && (\n              <Box flex=\"none\">\n                <Hotkeys keys={hotkeys} />\n              </Box>\n            )}\n          </Flex>\n        }\n        padding={1}\n        ref={ref}\n        {...rest}\n      />\n    )\n  }\n\n  return <UITooltip {...TOOLTIP_SHARED_PROPS} content={content} ref={ref} {...rest} />\n})\n","/* eslint-disable no-restricted-imports */\nimport {\n  TooltipDelayGroupProvider as UITooltipDelayGroupProvider,\n  type TooltipDelayGroupProviderProps as UITooltipDelayGroupProviderProps,\n} from '@sanity/ui'\n\nimport {TOOLTIP_DELAY_PROPS} from '../tooltip/constants'\n\n/** @internal */\nexport type TooltipDelayGroupProviderProps = Omit<UITooltipDelayGroupProviderProps, 'delay'>\n\n/**\n * Opinionated Sanity UI <TooltipDelayGroupProvider> which forces the same delay to all tooltips.\n *\n * @internal\n */\nexport const TooltipDelayGroupProvider = (props: TooltipDelayGroupProviderProps) => {\n  return (\n    <UITooltipDelayGroupProvider delay={TOOLTIP_DELAY_PROPS}>\n      {props.children}\n    </UITooltipDelayGroupProvider>\n  )\n}\n","const BASE_URL = \"https://docs.sanity.io/help/\";\nfunction generateHelpUrl(slug) {\n  return BASE_URL + slug;\n}\nexport { generateHelpUrl };\n//# sourceMappingURL=generate-help-url.esm.js.map\n"],"names":["ConditionalWrapper","children","condition","wrapper","LARGE_BUTTON_PROPS","space","padding","DEFAULT_BUTTON_PROPS","TooltipButtonWrapper","styled","span","Button","forwardRef","t0","ref","$","_c","paddingY","rest","t1","t2","t3","tooltipProps","size","mode","tone","undefined","t4","content","renderWrapper","sizeProps","t5","t6","UIButton","t7","Dialog","bodyHeight","footer","props","t","useTranslation","confirmButton","cancelButton","onClose","UIDialog","ErrorBoundary","onCatch","source","useContext","SourceContext","error","caughtError","info","caughtInfo","onUncaughtError","handleCatch","UIErrorBoundary","MenuButton","popover","animate","UIMenuButton","MenuGroup","UIMenuGroup","Hotkeys","makePlatformAware","keys","hotKeys","map","platformifyKey","UIHotkeys","IS_APPLE_DEVICE","navigator","platform","test","key","lowerKey","toLowerCase","matchCase","original","target","orgLength","length","replace","char","i","toUpperCase","FONT_SIZE","SUBTITLE_FONT_SIZE","SubtitleText","Text","PreviewWrapper","Box","MenuItem","Icon","IconRight","__unstable_space","__unstable_subtitle","badgeText","childrenProp","disabled","hotkeys","renderMenuItem","text","icon","iconRight","preview","opacity","isValidElement","isValidElementType","marginTop","marginBottom","menuItemContent","t8","t9","t10","t11","t12","t13","UIMenuItem","t14","Popover","UIPopover","Tab","UITab","TOOLTIP_DELAY_PROPS","open","TOOLTIP_SHARED_PROPS","arrow","boundaryElement","delay","fallbackPlacements","placement","portal","Tooltip","UITooltip","TooltipDelayGroupProvider","UITooltipDelayGroupProvider","BASE_URL","slug"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13]}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"file":"_createContext.mjs","sources":["file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_createContext/createGlobalScopedContext.ts"],"sourcesContent":["import {type Context, createContext} from 'react'\n\nimport {SANITY_VERSION} from '../core/version'\n\nconst MISSING_CONTEXT_HELP_URL = 'https://www.sanity.io/help/missing-context-error'\n\n/**\n * @internal\n * @hidden\n */\nexport function createGlobalScopedContext<ContextType, const T extends ContextType = ContextType>(\n  /**\n   * It's important to prefix these keys as they are global\n   */\n  key: `sanity/_singletons/context/${string}`,\n  defaultValue: T,\n): Context<ContextType> {\n  const symbol = Symbol.for(key)\n\n  /**\n   * Prevent errors about re-renders on React SSR on Next.js App Router\n   */\n  if (typeof document === 'undefined') {\n    return createContext<ContextType>(defaultValue)\n  }\n\n  if (!globalScope[symbol]) {\n    globalScope[symbol] = {context: createContext<T>(defaultValue), version: SANITY_VERSION}\n  } else if (globalScope[symbol].version !== SANITY_VERSION) {\n    throw new TypeError(\n      `Duplicate instances of context \"${key}\" with incompatible versions detected: Expected ${SANITY_VERSION} but got ${globalScope[symbol].version}.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n  } else if (!warned.has(SANITY_VERSION)) {\n    console.warn(\n      `Duplicate instances of context \"${key}\" detected. This is likely a mistake and may cause unexpected behavior.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n    warned.add(SANITY_VERSION)\n  }\n\n  return globalScope[symbol].context\n}\n\nconst warned = new Set<typeof SANITY_VERSION>()\n\n/**\n * Gets the global scope instance in a given environment.\n *\n * The strategy is to return the most modern, and if not, the most common:\n * - The `globalThis` variable is the modern approach to accessing the global scope\n * - The `window` variable is the global scope in a web browser\n * - The `self` variable is the global scope in workers and others\n * - The `global` variable is the global scope in Node.js\n */\nfunction getGlobalScope() {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof window !== 'undefined') return window\n  if (typeof self !== 'undefined') return self\n  if (typeof global !== 'undefined') return global\n\n  throw new Error('sanity: could not locate global scope')\n}\n\nconst globalScope = getGlobalScope() as any\n"],"names":["MISSING_CONTEXT_HELP_URL","createGlobalScopedContext","key","defaultValue","symbol","Symbol","for","document","createContext","globalScope","context","version","SANITY_VERSION","TypeError","warned","has","console","warn","add","Set","getGlobalScope","globalThis","window","self","global","Error"],"mappings":";;;;;;;AAIA,MAAMA,2BAA2B;AAMjBC,SAAAA,0BAIdC,GAAAA,EACAC,YAAAA,EACsB;IAChBC,MAAAA,SAASC,OAAOC,GAAAA,CAAIJ,GAAG;IAK7B,IAAI,OAAOK,WAAa,KACtB,WAAOC,8KAAAA,EAA2BL,YAAY;IAG5C,IAAA,CAACM,WAAAA,CAAYL,MAAM,CAAA,EACrBK,WAAAA,CAAYL,MAAM,CAAA,GAAI;QAACM,2KAASF,gBAAAA,EAAiBL,YAAY;QAAGQ,SAASC,+KAAAA;IAAc;SAClF;QAAIH,IAAAA,WAAAA,CAAYL,MAAM,CAAA,CAAEO,OAAAA,mKAAYC,iBAAAA,EACnC,MAAA,IAAIC,UACR,CAAA,gCAAA,EAAmCX,GAAG,CAAA,gDAAA,gKAAmDU,iBAAc,CAAA,SAAA,EAAYH,WAAAA,CAAYL,MAAM,CAAA,CAAEO,OAAO,CAAA;;mCAAA,EACtGX,wBAAwB,EAClE;QACUc,OAAOC,GAAAA,+JAAIH,iBAAc,KAAA,CACnCI,QAAQC,IAAAA,CACN,CAAA,gCAAA,EAAmCf,GAAG,CAAA;;mCAAA,EACEF,wBAAwB,EAClE,GACAc,OAAOI,GAAAA,CAAIN,+KAAc,CAAA;IAAA;IAGpBH,OAAAA,WAAAA,CAAYL,MAAM,CAAA,CAAEM,OAAAA;AAC7B;AAEA,MAAMI,SAAAA,aAAAA,GAAAA,IAAaK,IAA2B;AAW9C,SAASC,iBAAiB;IACpB,IAAA,OAAOC,aAAe,IAAoBA,CAAAA,OAAAA;IAC1C,IAAA,OAAOC,SAAW,IAAoBA,CAAAA,OAAAA;IACtC,IAAA,OAAOC,OAAS,IAAoBA,CAAAA,OAAAA;IACpC,IAAA,OAAOC,SAAW,IAAoBA,CAAAA,OAAAA;IAEpC,MAAA,IAAIC,MAAM,uCAAuC;AACzD;AAEA,MAAMhB,cAAcW,eAAe","ignoreList":[0]}},
    {"offset": {"line": 468, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"file":"_singletons.mjs","sources":["file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ActiveWorkspaceMatcherContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/AddonDatasetContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CalendarContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ChangeIndicatorTrackerContexts.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ColorSchemeSetValueContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ColorSchemeValueContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentInputContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsAuthoringPathContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsEnabledContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsIntentContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsOnboardingContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsSelectedPathContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CommentsUpsellContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ConnectorContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/CopyPasteContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DiffContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentActionPropsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentChangeContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentFieldActionsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentIdContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentPaneContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/DocumentSheetListContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FieldActionsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FormBuilderContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FormCallbacksContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FormFieldPresenceContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FormValueContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/FreeTrialContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/GetFormValueContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/HoveredFieldContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/IsLastPaneContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/LocaleContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/MentionUserContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/NavbarContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PaneContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PaneLayoutContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PaneRouterContext.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PortableTextMarkersContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PortableTextMemberItemElementRefsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PortableTextMemberItemsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PresenceContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PresenceTrackerContexts.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/PreviewCardContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ReferenceInputOptionsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ReferenceItemRefContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ResourceCacheContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ReviewChangesContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/RouterContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/RouterHistoryContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/SanityCreateConfigContext.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ScheduledPublishingEnabledContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/SchedulePublishingUpsellContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/Schedules.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ScrollContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/SearchContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/SortableItemIdContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/SourceContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/StructureToolContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/StudioAnnouncementsContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/TasksContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/TasksEnabledContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/TasksNavigationContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/TasksUpsellContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/TreeEditingEnabledContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/UserColorManagerContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ValidationContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/VirtualizerScrollInstanceContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/WorkspaceContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/WorkspacesContext.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/_singletons/context/ZIndexContext.ts"],"sourcesContent":["import {createContext} from 'sanity/_createContext'\n\nimport type {ActiveWorkspaceMatcherContextValue} from '../../core/studio/activeWorkspaceMatcher/ActiveWorkspaceMatcherContext'\n\n/** @internal */\nexport const ActiveWorkspaceMatcherContext =\n  createContext<ActiveWorkspaceMatcherContextValue | null>(\n    'sanity/_singletons/context/active-workspace-matcher',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {AddonDatasetContextValue} from '../../core/studio/addonDataset/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const AddonDatasetContext = createContext<AddonDatasetContextValue | null>(\n  'sanity/_singletons/context/addon-dataset',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CalendarContextValue} from '../../core/studio/components/navbar/search/components/filters/filter/inputs/date/datePicker/calendar/contexts/CalendarContext'\n\n/**\n * @internal\n */\nexport const CalendarContext = createContext<CalendarContextValue | undefined>(\n  'sanity/_singletons/context/calendar',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  ChangeIndicatorTrackerContextStoreType,\n  ChangeIndicatorTrackerGetSnapshotType,\n} from '../../core/changeIndicators/ChangeIndicatorTrackerContexts'\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextStore =\n  createContext<ChangeIndicatorTrackerContextStoreType>(\n    'sanity/_singletons/context/change-indicator-tracker-store',\n    null,\n  )\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextGetSnapshot =\n  createContext<ChangeIndicatorTrackerGetSnapshotType>(\n    'sanity/_singletons/context/change-indicator-tracker-get-snapshot',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * The setter for ColorSchemeValueContext, in a separate context to avoid unnecessary re-renders\n * If set to false then the UI should adjust to reflect that the Studio can't change the color scheme\n * @internal\n */\nexport const ColorSchemeSetValueContext = createContext<\n  ((nextScheme: StudioThemeColorSchemeKey) => void) | false | null\n>('sanity/_singletons/context/color-scheme-set-value', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * Used to keep track of the internal value, which can be \"system\" in addition to \"light\" and \"dark\"\n * @internal\n */\nexport const ColorSchemeValueContext = createContext<StudioThemeColorSchemeKey | null>(\n  'sanity/_singletons/context/color-scheme-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentInputContextValue} from '../../core/comments/components/pte/comment-input/CommentInputProvider'\n\n/**\n * @internal\n */\nexport const CommentInputContext = createContext<CommentInputContextValue | null>(\n  'sanity/_singletons/context/comment-input',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsAuthoringPathContextValue} from '../../core/comments/context/authoring-path/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsAuthoringPathContext = createContext<CommentsAuthoringPathContextValue | null>(\n  'sanity/_singletons/context/comments-authoring-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsContextValue} from '../../core/comments/context/comments/types'\n\n/**\n * @internal\n */\nexport const CommentsContext = createContext<CommentsContextValue | null>(\n  'sanity/_singletons/context/comments',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsEnabledContextValue} from '../../core/comments/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the comments feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// comments functionality is included by default in all new studio\n// configurations. Therefore, in the absence of a specific provider\n// (CommentsEnabledProvider), we assume that the feature is disabled.\n/**\n * @internal\n */\nexport const CommentsEnabledContext = createContext<CommentsEnabledContextValue>(\n  'sanity/_singletons/context/comments-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsIntentContextValue} from '../../core/comments/context/intent/types'\n\n/**\n * @internal\n */\nexport const CommentsIntentContext = createContext<CommentsIntentContextValue | undefined>(\n  'sanity/_singletons/context/comments-intent',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsOnboardingContextValue} from '../../core/comments/context/onboarding/types'\n\n/**\n * @internal\n */\nexport const CommentsOnboardingContext = createContext<CommentsOnboardingContextValue | null>(\n  'sanity/_singletons/context/comments-onboarding',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsSelectedPathContextValue} from '../../core/comments/context/selected-path/types'\n\n/**\n * @internal\n */\nexport const CommentsSelectedPathContext = createContext<CommentsSelectedPathContextValue | null>(\n  'sanity/_singletons/context/comments-selected-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsUpsellContextValue} from '../../core/comments/context/upsell/types'\n\n/**\n * @internal\n */\nexport const CommentsUpsellContext = createContext<CommentsUpsellContextValue | null>(\n  'sanity/_singletons/context/comments-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ConnectorContextValue} from '../../core/changeIndicators/ConnectorContext'\n\n/** @internal */\nexport const ConnectorContext = createContext<ConnectorContextValue>(\n  'sanity/_singletons/context/connector',\n  {\n    isReviewChangesOpen: false,\n    onOpenReviewChanges: () => undefined,\n    onSetFocus: () => undefined,\n  } as ConnectorContextValue,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CopyPasteContextType} from '../../core/studio/copyPaste'\n\n/**\n * @beta\n * @hidden\n */\nexport const CopyPasteContext = createContext<CopyPasteContextType | null>(\n  'sanity/_singletons/context/copy-paste',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport const DiffContext = createContext<{\n  path: Path\n}>('sanity/_singletons/context/diff', {\n  path: [],\n})\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentActionProps} from '../../core/config/document/actions'\n\n/**\n * @internal\n */\nexport const DocumentActionPropsContext = createContext<DocumentActionProps | undefined>(\n  'sanity/_singletons/context/document-action-props',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentChangeContextInstance} from '../../core/field/diff/contexts/DocumentChangeContext'\n\n/** @internal */\nexport const DocumentChangeContext = createContext<DocumentChangeContextInstance | null>(\n  'sanity/_singletons/context/document-change',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldAction} from '../../core/config/document/fieldActions/types'\n\n/**\n * @internal\n */\nexport interface DocumentFieldActionsContextValue {\n  actions: DocumentFieldAction[]\n}\n\n/**\n * @internal\n */\nexport const DocumentFieldActionsContext = createContext<DocumentFieldActionsContextValue | null>(\n  'sanity/_singletons/context/document-field-actions',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface DocumentIdContextValue {\n  id: string\n}\n\n/**\n * @internal\n */\nexport const DocumentIdContext = createContext<DocumentIdContextValue | null>(\n  'sanity/_singletons/context/document-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentPaneContextValue} from '../../structure/panes/document/DocumentPaneContext'\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(\n  'sanity/_singletons/context/document-pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentSheetListContextValue} from '../../structure/panes/documentList/sheetList/DocumentSheetListProvider'\n\n/** @internal */\nexport const DocumentSheetListContext = createContext<DocumentSheetListContextValue | undefined>(\n  'sanity/_singletons/context/document-sheet-list',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldActionNode} from '../../core/config/document/fieldActions/types'\n\n/** @internal */\nexport interface FieldActionsContextValue {\n  actions: DocumentFieldActionNode[]\n  focused?: boolean\n  hovered: boolean\n  onMouseEnter: () => void\n  onMouseLeave: () => void\n}\n\n/** @internal */\nexport const FieldActionsContext = createContext<FieldActionsContextValue>(\n  'sanity/_singletons/context/field-actions',\n  {\n    actions: [],\n    focused: false,\n    hovered: false,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormBuilderContextValue} from '../../core/form/FormBuilderContext'\n\n/**\n * @internal\n */\nexport const FormBuilderContext = createContext<FormBuilderContextValue | null>(\n  'sanity/_singletons/context/form-builder',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormCallbacksValue} from '../../core/form/studio/contexts/FormCallbacks'\n\n/**\n * @internal\n */\nexport const FormCallbacksContext = createContext<FormCallbacksValue | null>(\n  'sanity/_singletons/context/form-callbacks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/** @internal */\nexport const FormFieldPresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/form-field-presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormValueContextValue} from '../../core/form/contexts/FormValue'\n\n/**\n * @internal\n */\nexport const FormValueContext = createContext<FormValueContextValue | null>(\n  'sanity/_singletons/context/form-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FreeTrialContextProps} from '../../core/studio/components/navbar/free-trial/FreeTrialContext'\n\n/**\n * @internal\n */\nexport const FreeTrialContext = createContext<FreeTrialContextProps | undefined>(\n  'sanity/_singletons/context/free-trial',\n  undefined,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n * @hidden\n */\nexport type GetFormValueContextValue = (path: Path) => unknown\n\n/**\n * @internal\n */\nexport const GetFormValueContext = createContext<GetFormValueContextValue | null>(\n  'sanity/_singletons/context/get-form-value',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport interface HoveredFieldContextValue {\n  store: {\n    subscribe: (onStoreCallback: () => void) => () => void\n    getSnapshot: () => string[]\n  }\n  onMouseEnter: (path: Path) => void\n  onMouseLeave: (path: Path) => void\n}\n\n/** @internal */\nexport const HoveredFieldContext = createContext<HoveredFieldContextValue>(\n  'sanity/_singletons/context/hovered-field',\n  {\n    store: {\n      subscribe: () => () => undefined,\n      getSnapshot: () => [],\n    },\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * TODO: remove this context when alternate document-specific context are\n * introduced.\n *\n * The following context is used in the structure tool to set the active\n * document if it's the last pane open in the structure tool. This is a\n * temporary context provider that was introduced when the comments and tasks\n * plugins were refactor and decoupled from the structure tool. ideally this\n * should be removed and replaced with a document-specific context that gives\n * plugin authors access to what the `usePane`, `usePaneRouter`, and\n * `useDocumentPane` provides without exposing specifics from the structure tool\n */\n/**\n * @internal\n */\nexport const IsLastPaneContext = createContext<boolean>(\n  'sanity/_singletons/context/is-last-pane',\n  false,\n)\n","import type {i18n} from 'i18next'\nimport {createContext} from 'sanity/_createContext'\n\nimport type {Locale} from '../../core/i18n/types'\n\n/**\n * @internal\n * @hidden\n */\nexport interface LocaleContextValue {\n  locales: Locale[]\n  currentLocale: Locale\n  __internal: {\n    i18next: i18n\n  }\n  changeLocale: (newLocale: string) => Promise<void>\n}\n\n/**\n * @internal\n * @hidden\n */\nexport const LocaleContext = createContext<LocaleContextValue | undefined>(\n  'sanity/_singletons/context/locale',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {MentionUserContextValue} from '../../core/tasks/context/mentionUser/types'\n\n/**\n * @internal\n */\nexport const MentionUserContext = createContext<MentionUserContextValue | null>(\n  'sanity/_singletons/context/mention-user',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {NavbarContextValue} from '../../core/studio/StudioLayout'\n\n/** @internal */\nexport const NavbarContext = createContext<NavbarContextValue>(\n  'sanity/_singletons/context/navbar',\n  {\n    onSearchFullscreenOpenChange: () => '',\n    onSearchOpenChange: () => '',\n    searchFullscreenOpen: false,\n    searchFullscreenPortalEl: null,\n    searchOpen: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(\n  'sanity/_singletons/context/pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneLayoutContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(\n  'sanity/_singletons/context/pane-layout',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneRouterContextValue} from '../../structure/components/paneRouter/types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>(\n  'sanity/_singletons/context/pane-router',\n  {\n    index: 0,\n    groupIndex: 0,\n    siblingIndex: 0,\n    payload: undefined,\n    params: {},\n    hasGroupSiblings: false,\n    groupLength: 0,\n    routerPanesState: [],\n    BackLink: () => missingContext(),\n    ChildLink: () => missingContext(),\n    ReferenceChildLink: () => missingContext(),\n    handleEditReference: () => missingContext(),\n    ParameterizedLink: () => missingContext(),\n    replaceCurrent: () => missingContext(),\n    closeCurrentAndAfter: () => missingContext(),\n    closeCurrent: () => missingContext(),\n    duplicateCurrent: () => missingContext(),\n    setView: () => missingContext(),\n    setParams: () => missingContext(),\n    setPayload: () => missingContext(),\n    navigateIntent: () => missingContext(),\n    createPathWithParams: () => missingContext(),\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMarker} from '../../core/form/types/_transitional'\n\n/**\n * @internal\n */\nexport const PortableTextMarkersContext = createContext<PortableTextMarker[]>(\n  'sanity/_singletons/context/portable-text-markers',\n  [],\n)\n","import {BehaviorSubject} from 'rxjs'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport type PortableTextEditorElement = HTMLDivElement | HTMLSpanElement\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemElementRefsContext = createContext<\n  BehaviorSubject<Record<string, PortableTextEditorElement | null | undefined>>\n>('sanity/_singletons/context/portable-text-member-item-element-refs', new BehaviorSubject({}))\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMemberItem} from '../../core/form/inputs/PortableText/PortableTextInput'\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemsContext = createContext<PortableTextMemberItem[]>(\n  'sanity/_singletons/context/portable-text-member-items',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/**\n * @internal\n */\nexport const PresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  PresenceTrackerContextStoreType,\n  PresenceTrackerGetSnapshotType,\n} from '../../core/presence/overlay/PresenceTrackerContexts'\n\n/** @internal */\nexport const PresenceTrackerContextStore = createContext<PresenceTrackerContextStoreType>(\n  'sanity/_singletons/context/presence-tracker-store',\n  null,\n)\n\n/** @internal */\nexport const PresenceTrackerContextGetSnapshot = createContext<PresenceTrackerGetSnapshotType>(\n  'sanity/_singletons/context/presence-tracker-get-snapshot',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PreviewCardContextValue} from '../../core/components/previewCard/PreviewCard'\n\n/**\n * @internal\n */\nexport const PreviewCardContext = createContext<PreviewCardContextValue>(\n  'sanity/_singletons/context/preview-card',\n  {\n    selected: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReferenceInputOptions} from '../../core/form/studio/contexts/ReferenceInputOptions'\n\n/**\n * @internal\n */\nexport const ReferenceInputOptionsContext = createContext<ReferenceInputOptions>(\n  'sanity/_singletons/context/reference-input-options',\n  {},\n)\n","/* eslint-disable import/no-duplicates */\nimport type {MutableRefObject} from 'react'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface ReferenceItemRef {\n  menuRef: MutableRefObject<HTMLDivElement | null>\n  menuButtonRef: MutableRefObject<HTMLButtonElement | null>\n  containerRef: MutableRefObject<HTMLDivElement | null>\n}\n\n/**\n * This is a way to store ref of the menu as well as the container of the ReferenceItem\n * so it can be used down the tree for clickOutside handling\n * @internal\n */\nexport const ReferenceItemRefContext = createContext<ReferenceItemRef | null>(\n  'sanity/_singletons/context/reference-item-ref',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ResourceCache} from '../../core/store/_legacy/ResourceCacheProvider'\n\n/**\n * @internal\n */\nexport const ResourceCacheContext = createContext<ResourceCache | null>(\n  'sanity/_singletons/context/resource-cache',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReviewChangesContextValue} from '../../core/form/studio/contexts/reviewChanges/types'\n\n/**\n * @internal\n */\nexport const ReviewChangesContext = createContext<ReviewChangesContextValue | null>(\n  'sanity/_singletons/context/review-changes',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterContextValue} from '../../router/types'\n\n/**\n * @internal\n */\nexport const RouterContext = createContext<RouterContextValue | null>(\n  'sanity/_singletons/context/router',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterHistory} from '../../core/studio/router'\n\n/**\n * Internal use only. Userland should leverage the public `useRouter` APIs.\n * @internal\n */\nexport const RouterHistoryContext = createContext<RouterHistory | null>(\n  'sanity/_singletons/context/router-history',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SanityCreateConfigContextValue} from '../../core'\n\n/**\n * @internal\n */\nexport const SanityCreateConfigContext = createContext<SanityCreateConfigContextValue>(\n  'sanity/_singletons/context/start-in-create-enabled',\n  {\n    startInCreateEnabled: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ScheduledPublishingEnabledContextValue} from '../../core/scheduledPublishing/tool/contexts/ScheduledPublishingEnabledProvider'\n\n/**\n * @internal\n */\nexport const ScheduledPublishingEnabledContext =\n  createContext<ScheduledPublishingEnabledContextValue | null>(\n    'sanity/_singletons/context/scheduled-publishing-enabled',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SchedulePublishUpsellContextValue} from '../../core/scheduledPublishing/tool/contexts/SchedulePublishingUpsellProvider'\n\n/**\n * @internal\n */\nexport const SchedulePublishUpsellContext = createContext<SchedulePublishUpsellContextValue>(\n  'sanity/_singletons/context/schedule-publish-upsell',\n  {\n    upsellData: null,\n    handleOpenDialog: () => null,\n    upsellDialogOpen: false,\n    telemetryLogs: {\n      dialogSecondaryClicked: () => null,\n      dialogPrimaryClicked: () => null,\n      panelViewed: () => null,\n      panelDismissed: () => null,\n      panelPrimaryClicked: () => null,\n      panelSecondaryClicked: () => null,\n    },\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SchedulesContextValue} from '../../core/scheduledPublishing/tool/contexts/schedules'\n\n/**\n * @internal\n */\nexport const SchedulesContext = createContext<SchedulesContextValue | undefined>(\n  'sanity/_singletons/context/schedules',\n  undefined,\n)\n","import type {PubSub} from 'nano-pubsub'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ScrollContext = createContext<null | PubSub<Event>>(\n  'sanity/_singletons/context/scroll',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SearchContextValue} from '../../core/studio/components/navbar/search/contexts/search/SearchContext'\n\n/**\n * @internal\n */\nexport const SearchContext = createContext<SearchContextValue | undefined>(\n  'sanity/_singletons/context/search',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const SortableItemIdContext = createContext<string | null>(\n  'sanity/_singletons/context/sortable-item-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Source} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const SourceContext = createContext<Source | null>('sanity/_singletons/context/source', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StructureToolContextValue} from '../../structure/types'\n\n/**\n * @internal\n */\nexport const StructureToolContext = createContext<StructureToolContextValue | null>(\n  'sanity/_singletons/context/structure-tool',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioAnnouncementsContextValue} from '../../core/studio/studioAnnouncements/types'\n\n/**\n * @internal\n */\nexport const StudioAnnouncementContext = createContext<StudioAnnouncementsContextValue | undefined>(\n  'sanity/_singletons/context/studioAnnouncements',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksContextValue} from '../../core/tasks/context/tasks/types'\n\n/**\n * @internal\n */\nexport const TasksContext = createContext<TasksContextValue | null>(\n  'sanity/_singletons/context/tasks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksEnabledContextValue} from '../../core/tasks/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the tasks feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// Tasks are included by default in all new Studio configurations. Therefore,\n// in the absence of a specific provider (TasksEnabledProvider), we assume that\n// the feature is disabled.\n/**\n * @internal\n */\nexport const TasksEnabledContext = createContext<TasksEnabledContextValue>(\n  'sanity/_singletons/context/tasks-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksNavigationContextValue} from '../../core/tasks/context/navigation/types'\n\n/**\n * @internal\n */\nexport const TasksNavigationContext = createContext<TasksNavigationContextValue | null>(\n  'sanity/_singletons/context/tasks-navigation',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksUpsellContextValue} from '../../core/tasks/context/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const TasksUpsellContext = createContext<TasksUpsellContextValue | null>(\n  'sanity/_singletons/context/tasks-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TreeEditingEnabledContextValue} from '../../core/form/studio/tree-editing/context/enabled/useTreeEditingEnabled'\n\n/**\n * @internal\n */\nexport const TreeEditingEnabledContext = createContext<TreeEditingEnabledContextValue>(\n  'sanity/_singletons/context/tree-editing-enabled',\n  {\n    enabled: false,\n    legacyEditing: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {UserColorManager} from '../../core/user-color/types'\n\n/**\n * @internal\n */\nexport const UserColorManagerContext = createContext<UserColorManager | null>(\n  'sanity/_singletons/context/user-color-manager',\n  null,\n)\n","import type {ValidationMarker} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ValidationContext = createContext<ValidationMarker[]>(\n  'sanity/_singletons/context/validation',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {VirtualizerScrollInstance} from '../../core/form/inputs/arrays/ArrayOfObjectsInput/List/useVirtualizerScrollInstance'\n\n/**\n * This is used to store the reference to the scroll element for virtualizer\n * @internal\n */\nexport const VirtualizerScrollInstanceContext = createContext<VirtualizerScrollInstance | null>(\n  'sanity/_singletons/context/virtualizer-scroll-instance',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Workspace} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const WorkspaceContext = createContext<Workspace | null>(\n  'sanity/_singletons/context/workspace',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {WorkspacesContextValue} from '../../core/studio/workspaces/WorkspacesContext'\n\n/** @internal */\nexport const WorkspacesContext = createContext<WorkspacesContextValue | null>(\n  'sanity/_singletons/context/workspaces',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ZIndexContextValue} from '../../core/components/zOffsets/types'\n\n/**\n * @internal\n */\nexport const zIndexContextDefaults: ZIndexContextValue = {\n  navbar: 200,\n  navbarPopover: 500000,\n  navbarDialog: 500001,\n  // pane\n  pane: 100,\n  paneHeader: [110, 15000],\n  paneFooter: [120, 20000],\n  paneResizer: [130, 25000],\n  paneDialog: [140, 5000],\n  //\n  popover: 200,\n  modal: 200,\n  movingItem: 10000,\n  drawershade: 1000000,\n  drawer: 1000001,\n  fullscreen: 1200000,\n  toast: [100, 11000],\n  // NOT IN USE\n  portal: 200,\n  dropdown: 200,\n  navbarFixed: 1010,\n  fullscreenEdit: 1050,\n  popoverBackground: 1060,\n  tooltip: 200,\n  modalBackground: 2000,\n  spinner: 3000,\n}\n\n/**\n * TODO: Rename to `ZOffsetsContext`\n *\n * @internal\n */\nexport const ZIndexContext = createContext<ZIndexContextValue>(\n  'sanity/_singletons/context/z-index',\n  zIndexContextDefaults,\n)\n"],"names":["ActiveWorkspaceMatcherContext","createContext","AddonDatasetContext","CalendarContext","undefined","ChangeIndicatorTrackerContextStore","ChangeIndicatorTrackerContextGetSnapshot","ColorSchemeSetValueContext","ColorSchemeValueContext","CommentInputContext","CommentsAuthoringPathContext","CommentsContext","CommentsEnabledContext","enabled","mode","CommentsIntentContext","CommentsOnboardingContext","CommentsSelectedPathContext","CommentsUpsellContext","ConnectorContext","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","CopyPasteContext","DiffContext","path","DocumentActionPropsContext","DocumentChangeContext","DocumentFieldActionsContext","DocumentIdContext","DocumentPaneContext","DocumentSheetListContext","FieldActionsContext","actions","focused","hovered","onMouseEnter","onMouseLeave","FormBuilderContext","FormCallbacksContext","FormFieldPresenceContext","FormValueContext","FreeTrialContext","GetFormValueContext","HoveredFieldContext","store","subscribe","getSnapshot","IsLastPaneContext","LocaleContext","MentionUserContext","NavbarContext","onSearchFullscreenOpenChange","onSearchOpenChange","searchFullscreenOpen","searchFullscreenPortalEl","searchOpen","PaneContext","PaneLayoutContext","missingContext","Error","PaneRouterContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrentAndAfter","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","createPathWithParams","PortableTextMarkersContext","PortableTextMemberItemElementRefsContext","BehaviorSubject","PortableTextMemberItemsContext","PresenceContext","PresenceTrackerContextStore","PresenceTrackerContextGetSnapshot","PreviewCardContext","selected","ReferenceInputOptionsContext","ReferenceItemRefContext","ResourceCacheContext","ReviewChangesContext","RouterContext","RouterHistoryContext","SanityCreateConfigContext","startInCreateEnabled","ScheduledPublishingEnabledContext","SchedulePublishUpsellContext","upsellData","handleOpenDialog","upsellDialogOpen","telemetryLogs","dialogSecondaryClicked","dialogPrimaryClicked","panelViewed","panelDismissed","panelPrimaryClicked","panelSecondaryClicked","SchedulesContext","ScrollContext","SearchContext","SortableItemIdContext","SourceContext","StructureToolContext","StudioAnnouncementContext","TasksContext","TasksEnabledContext","TasksNavigationContext","TasksUpsellContext","TreeEditingEnabledContext","legacyEditing","UserColorManagerContext","ValidationContext","VirtualizerScrollInstanceContext","WorkspaceContext","WorkspacesContext","zIndexContextDefaults","navbar","navbarPopover","navbarDialog","pane","paneHeader","paneFooter","paneResizer","paneDialog","popover","modal","movingItem","drawershade","drawer","fullscreen","toast","portal","dropdown","navbarFixed","fullscreenEdit","popoverBackground","tooltip","modalBackground","spinner","ZIndexContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70]}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"file":"router.mjs","sources":["file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/useRouter.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/useLink.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/useIntentLink.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/IntentLink.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/Link.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/_parseRoute.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/arrayify.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/_findMatchingRoutes.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/encodeURIComponentExcept.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/debug.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/_resolvePathFromState.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/parseScopedParams.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/_resolveStateFromPath.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/base64url.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/jsonParamsEncoding.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/utils/paramsEncoding.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/route.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/RouterProvider.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/RouteScope.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/useStateLink.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/StateLink.tsx","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/useRouterState.ts","file:///Users/ella/Desktop/Aries/node_modules/sanity/src/router/withRouter.tsx"],"sourcesContent":["import {useContext} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {type RouterContextValue} from './types'\n\n/**\n * Returns the router context value.\n * @public\n *\n * @returns The router context value.\n *  {@link RouterContextValue}\n * @throws An error if the router context value is missing.\n *\n * @example\n * ```tsx\n * const router = useRouter()\n * ```\n */\nexport function useRouter(): RouterContextValue {\n  const router = useContext(RouterContext)\n\n  if (!router) {\n    throw new Error('Router: missing context value')\n  }\n\n  return router\n}\n","import {useCallback} from 'react'\n\nimport {useRouter} from './useRouter'\n\nfunction isLeftClickEvent(event: React.MouseEvent) {\n  return event.button === 0\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n}\n\n/**\n * @public\n */\nexport interface UseLinkOptions {\n  /**\n   * The URL that the link should navigate to.\n   */\n  href?: string\n\n  /**\n   * The event handler function that should be called when the link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Whether the link should replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame that the linked document will open in.\n   */\n  target?: string\n}\n\n/**\n * Returns an object with an `onClick` function that can be used as a click handler for a link.\n *\n * @public\n *\n * @param options - An object containing the properties for the link.\n *  See {@link UseLinkOptions}\n *\n * @returns An object with an `onClick` function.\n *\n * @example\n * ```tsx\n * const linkProps = useLink({\n *  href: 'https://www.sanity.io',\n *  target: '_blank'\n * })\n *\n * <a {...linkProps}>Link</a>\n * ```\n */\nexport function useLink(options: UseLinkOptions): {onClick: React.MouseEventHandler<HTMLElement>} {\n  const {onClick: onClickProp, href, target, replace = false} = options\n  const {navigateUrl} = useRouter()\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>): void => {\n      if (event.isDefaultPrevented()) {\n        return\n      }\n\n      if (!href) return\n\n      if (onClickProp) {\n        onClickProp(event)\n      }\n\n      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n        return\n      }\n\n      // If target prop is set (e.g. to \"_blank\") let browser handle link.\n      if (target) {\n        return\n      }\n\n      event.preventDefault()\n\n      navigateUrl({path: href, replace})\n    },\n    [href, navigateUrl, onClickProp, replace, target],\n  )\n\n  return {onClick: onClick}\n}\n","import {useMemo} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n */\nexport interface UseIntentLinkOptions {\n  /**\n   * The name of the intent to trigger.\n   */\n  intent: string\n\n  /**\n   * An optional click event handler.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Optional parameters to pass to the intent. See {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame to open the link in.\n   */\n  target?: string\n  searchParams?: SearchParam[]\n}\n\n/**\n *\n * Returns props for an anchor element that will trigger an intent when clicked.\n *\n * @example\n * ```tsx\n * const {onClick, href} = useIntentLink({\n *   intent: 'edit',\n *   params: {id: 'foo'}\n * })\n *\n * <a href={href} onClick={onClick}>Link to \"foo\" editor</a>\n * ```\n *\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseIntentLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n */\nexport function useIntentLink(options: UseIntentLinkOptions): {\n  onClick: React.MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {intent, onClick: onClickProp, params, replace, target, searchParams} = options\n  const {resolveIntentLink} = useRouter()\n  const href = useMemo(\n    () => resolveIntentLink(intent, params, searchParams),\n    [intent, params, searchParams, resolveIntentLink],\n  )\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useIntentLink} from './useIntentLink'\n\n/**\n * Props for the {@link IntentLink} component.\n *\n * @public\n */\nexport interface IntentLinkProps {\n  /**\n   * The name of the intent.\n   */\n  intent: string\n\n  /**\n   * The parameters to include in the intent.\n   * {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n\n  /**\n   * search params to include in the intent.\n   */\n  searchParams?: SearchParam[]\n}\n\n/**\n * @public\n *\n * @param props - Props to pass to `IntentLink` component.\n *  See {@link IntentLinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <IntentLink intent=\"edit\" params={{id: 'abc123'}}>Edit</IntentLink>\n * }\n * ```\n */\nexport const IntentLink = forwardRef(function IntentLink(\n  props: IntentLinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, params, target, searchParams, ...restProps} = props\n  const {onClick, href} = useIntentLink({\n    intent,\n    params,\n    target,\n    onClick: props.onClick,\n    searchParams,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} target={target} />\n})\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useLink} from './useLink'\n\n/**\n * Props for the {@link Link} component.\n *\n * @public\n */\nexport interface LinkProps {\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n}\n\n/**\n * A component that creates an HTML anchor element.\n *\n * @public\n *\n * @param props - Props to pass to the `Link` component.\n *  See {@link LinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *   return (\n *    <Link href=\"https://www.sanity.io\" target=\"_blank\" replace>\n *      Go to Sanity\n *    </Link>\n *   )\n * }\n * ```\n */\nexport const Link = forwardRef(function Link(\n  props: LinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, href, target, replace, ...restProps} = props\n  const {onClick} = useLink({onClick: onClickProp, href, target, replace})\n\n  return <a {...restProps} onClick={onClick} href={href} target={target} ref={ref} />\n})\n","import {type Route, type RouteSegment} from './types'\n\nconst VALID_PARAM_SEGMENT = /^[a-zA-Z0-9_-]+$/\n\nfunction createSegment(segment: string): RouteSegment | null {\n  if (!segment) {\n    return null\n  }\n\n  if (segment.startsWith(':')) {\n    const paramName = segment.slice(1)\n\n    if (!VALID_PARAM_SEGMENT.test(paramName)) {\n      const addendum = segment.includes('*')\n        ? ' Splats are not supported. Consider using child routes instead'\n        : ''\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(`Warning: Param segments \"${segment}\" includes invalid characters.${addendum}`),\n      )\n    }\n\n    return {type: 'param', name: paramName}\n  }\n\n  return {type: 'dir', name: segment}\n}\n\n/** @internal */\nexport function _parseRoute(route: string): Route {\n  const [pathname] = route.split('?')\n\n  const segments = pathname.split('/').map(createSegment).filter(Boolean) as RouteSegment[]\n\n  return {\n    raw: route,\n    segments: segments,\n  }\n}\n","export function arrayify<T>(val: Array<T> | T): Array<T> {\n  if (Array.isArray(val)) {\n    return val\n  }\n\n  return val ? [val] : []\n}\n","import {difference, intersection, isPlainObject, pick} from 'lodash'\n\nimport {\n  type InternalSearchParam,\n  type MatchError,\n  type MatchOk,\n  type MatchResult,\n  type RouterNode,\n  type RouterState,\n} from './types'\nimport {arrayify} from './utils/arrayify'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return isPlainObject(value)\n}\n\nfunction createMatchError(\n  node: RouterNode,\n  missingKeys: string[],\n  unmappableStateKeys: string[],\n): MatchError {\n  return {type: 'error', node, missingKeys, unmappableStateKeys}\n}\n\nfunction createMatchOk(\n  node: RouterNode,\n  matchedState: Record<string, string>,\n  searchParams: InternalSearchParam[],\n  child?: MatchOk | undefined,\n): MatchOk {\n  return {type: 'ok', node, matchedState, searchParams, child}\n}\n\n/** @internal */\nexport function _findMatchingRoutes(node: RouterNode, _state?: RouterState): MatchResult {\n  if (!_state) {\n    return createMatchOk(node, {}, [])\n  }\n\n  const scopedState = node.scope ? (_state[node.scope] as RouterState) : _state\n\n  const {_searchParams: searchParams = [], ...state} = scopedState || {}\n\n  const requiredParams = node.route.segments\n    .filter((seg) => seg.type === 'param')\n    .map((seg) => seg.name)\n\n  const stateKeys = isRecord(state) ? Object.keys(state) : []\n\n  // These are params found in both the state and the route definition\n  const consumedParams = intersection(stateKeys, requiredParams)\n\n  // these are params found in the route definition but not in the state, can't map them to a route\n  const missingParams = difference(requiredParams, consumedParams)\n\n  // these are params found in the state but not in the route definition\n  const remainingParams = difference(stateKeys, consumedParams)\n\n  if (missingParams.length > 0) {\n    return createMatchError(node, missingParams, [])\n  }\n\n  const scopedParams = searchParams.map(([key, value]): InternalSearchParam => [[key], value])\n\n  const consumedState = pick(state, consumedParams) as Record<string, string>\n\n  if (remainingParams.length === 0) {\n    return createMatchOk(node, consumedState, scopedParams)\n  }\n\n  const children = arrayify(\n    (typeof node.children === 'function'\n      ? node.children(isRecord(state) ? state : {})\n      : node.children) || [],\n  )\n\n  if (remainingParams.length > 0 && children.length === 0) {\n    // our state includes extra keys that's not consumed by child routes\n    return createMatchError(node, [], remainingParams)\n  }\n\n  const remainingState = pick(state, remainingParams)\n\n  const childResult = children.map((childNode) => _findMatchingRoutes(childNode, remainingState))\n\n  // Look for a matching route\n  const found = childResult.find((res): res is MatchOk => res.type === 'ok')\n  return found\n    ? createMatchOk(node, consumedState, scopedParams, found)\n    : createMatchError(node, [], remainingParams)\n}\n","/**\n * Like encodeURIComponent, but supports a custom set of unescaped characters.\n * @param uriComponent - A value representing an unencoded URI component.\n * @param unescaped - a string containing characters to not escape\n */\nexport function encodeURIComponentExcept(\n  uriComponent: string | number | boolean,\n  unescaped: string,\n): string {\n  const chars = [...String(uriComponent)]\n  let res = ''\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i]\n    if (unescaped.includes(char)) {\n      res += char\n    } else {\n      res += encodeURIComponent(char)\n    }\n  }\n  return res\n}\n","import Debug from 'debug'\n\nexport const debug = Debug('state-router')\n","import {_findMatchingRoutes} from './_findMatchingRoutes'\nimport {encodeURIComponentExcept} from './encodeURIComponentExcept'\nimport {type InternalSearchParam, type MatchOk, type RouterNode, type RouterState} from './types'\nimport {debug} from './utils/debug'\n\n/** @internal */\nexport function _resolvePathFromState(node: RouterNode, _state: RouterState): string {\n  debug('Resolving path from state %o', _state)\n\n  const match = _findMatchingRoutes(node, _state)\n  if (match.type === 'error') {\n    const unmappable = match.unmappableStateKeys\n    if (unmappable.length > 0) {\n      throw new Error(\n        `Unable to find matching route for state. Could not map the following state key${\n          unmappable.length == 1 ? '' : 's'\n        } to a valid url: ${unmappable.map(quote).join(', ')}`,\n      )\n    }\n    const missingKeys = match.missingKeys\n    throw new Error(\n      `Unable to find matching route for state. State object is missing the following key${\n        missingKeys.length == 1 ? '' : 's'\n      } defined in route: ${missingKeys.map(quote).join(', ')}`,\n    )\n  }\n\n  const {path, searchParams} = pathFromMatchResult(match)\n\n  const search = searchParams.length > 0 ? encodeParams(searchParams) : ''\n\n  return `/${path.join('/')}${search ? `?${search}` : ''}`\n}\n\nfunction bracketify(value: string): string {\n  return `[${value}]`\n}\n\nfunction encodeParams(params: InternalSearchParam[]): string {\n  return params\n    .flatMap(([key, value]) => {\n      if (value === undefined) {\n        return []\n      }\n      return [encodeSearchParamKey(serializeScopedPath(key)), encodeSearchParamValue(value)].join(\n        '=',\n      )\n    })\n    .join('&')\n}\n\nfunction serializeScopedPath(scopedPath: string[]): string {\n  const [head, ...tail] = scopedPath\n\n  return tail.length > 0 ? [head, ...tail.map(bracketify)].join('') : head\n}\n\nfunction encodeSearchParamValue(value: string): string {\n  return encodeURIComponentExcept(value, '/')\n}\n\nfunction encodeSearchParamKey(value: string): string {\n  return encodeURIComponentExcept(value, '[]')\n}\n\nfunction pathFromMatchResult(match: MatchOk): {\n  path: string[]\n  searchParams: InternalSearchParam[]\n} {\n  const matchedState = match.matchedState\n\n  const base = match.node.route.segments.map((segment) => {\n    if (segment.type === 'dir') {\n      return segment.name\n    }\n\n    const transform = match.node.transform && match.node.transform[segment.name]\n\n    return transform\n      ? transform.toPath(matchedState[segment.name] as any)\n      : matchedState[segment.name]\n  })\n\n  const childMatch = match.child ? pathFromMatchResult(match.child) : undefined\n\n  const searchParams = childMatch?.searchParams\n    ? [...match.searchParams, ...childMatch.searchParams]\n    : match.searchParams\n\n  return {\n    searchParams: addNodeScope(match.node, searchParams),\n    path: [...(base || []), ...(childMatch?.path || [])],\n  }\n}\n\nfunction addNodeScope(\n  node: RouterNode,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  const scope = node.scope\n  return scope && !node.__unsafe_disableScopedSearchParams\n    ? searchParams.map(([namespaces, value]) => [[scope, ...namespaces], value])\n    : searchParams\n}\n\nfunction quote(value: string): string {\n  return `\"${value}\"`\n}\n","import {type InternalSearchParam} from '../types'\n\nexport function parseScopedParams(params: [key: string, value: string][]): InternalSearchParam[] {\n  return params.map(([key, value]) => [parse(key), value])\n}\n\nconst OPEN = 1\nconst CLOSED = 0\n\nfunction parse(str: string) {\n  const result = []\n  let i = 0\n  let state = CLOSED\n  while (i < str.length) {\n    const nextBracketIdx = str.indexOf('[', i)\n    if (nextBracketIdx === -1) {\n      result.push(str.slice(i, str.length))\n      break\n    }\n    if (state === OPEN) {\n      throw new Error('Nested brackets not supported')\n    }\n    state = OPEN\n    if (nextBracketIdx > i) {\n      result.push(str.slice(i, nextBracketIdx))\n      i = nextBracketIdx\n    }\n\n    const nextClosing = str.indexOf(']', nextBracketIdx)\n    if (nextClosing === -1) {\n      if (state === OPEN) {\n        throw new Error('Unclosed bracket')\n      }\n      break\n    }\n    state = CLOSED\n    result.push(str.slice(i + 1, nextClosing))\n    i = nextClosing + 1\n  }\n  return result\n}\n","import {\n  type InternalSearchParam,\n  type RouterNode,\n  type RouterState,\n  type SearchParam,\n} from './types'\nimport {arrayify} from './utils/arrayify'\nimport {debug} from './utils/debug'\nimport {parseScopedParams} from './utils/parseScopedParams'\n\nfunction matchPath(\n  node: RouterNode,\n  path: string,\n  searchParams: InternalSearchParam[],\n): RouterState | null {\n  const parts = path.split('/').filter(Boolean)\n  const segmentsLength = node.route.segments.length\n\n  if (parts.length < segmentsLength) {\n    return null\n  }\n\n  const state: RouterState = {}\n  const isMatching = node.route.segments.every((segment, i) => {\n    if (segment.type === 'dir') {\n      return segment.name === parts[i]\n    }\n\n    const transform = node.transform && node.transform[segment.name]\n\n    state[segment.name] = transform ? transform.toState(parts[i]) : parts[i]\n\n    return true\n  })\n\n  if (!isMatching) {\n    return null\n  }\n\n  const rest = parts.slice(segmentsLength)\n\n  let childState: RouterState | null = null\n\n  const children =\n    typeof node.children === 'function' ? arrayify(node.children(state)) : node.children\n\n  const unscopedParams = removeScope(node.scope, searchParams)\n\n  children.some((childNode) => {\n    if (childNode) {\n      const childParams = childNode.scope\n        ? unscopedParams.filter(([namespaces]) => childNode.scope === namespaces[0])\n        : unscopedParams\n\n      childState = matchPath(childNode, rest.join('/'), childParams)\n      return childState\n    }\n    return undefined\n  })\n\n  if (rest.length > 0 && !childState) {\n    return null\n  }\n\n  const selfParams = unscopedParams.flatMap(([namespace, value]): SearchParam[] => {\n    return namespace.length === 1 ? [[namespace[0], value]] : []\n  })\n\n  const mergedState: RouterState = {\n    ...state,\n    ...(childState || {}),\n    ...(selfParams.length > 0 ? {_searchParams: selfParams} : {}),\n  }\n\n  return node.scope ? {[node.scope]: mergedState} : mergedState\n}\n\n/**\n * @internal\n */\nexport function _resolveStateFromPath(node: RouterNode, path: string): Record<string, any> | null {\n  debug('resolving state from path %s', path)\n\n  const [pathname, search] = path.split('?')\n  const urlSearchParams = Array.from(new URLSearchParams(search).entries())\n\n  const pathMatch = matchPath(node, pathname, parseScopedParams(urlSearchParams))\n\n  debug('resolved: %o', pathMatch || null)\n\n  return pathMatch || null\n}\n\nfunction removeScope(\n  scope: string | undefined,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  return scope\n    ? searchParams.map(([namespaces, value]) => [\n        namespaces[0] === scope ? namespaces.slice(1) : namespaces,\n        value,\n      ])\n    : searchParams\n}\n","/**\n * `atob()` and `btoa()` do not support Unicode characters outside of the Latin1 range,\n * but we obviously want to support the full range of Unicode characters in our router.\n *\n * Additionally, we would prefer not to use characters like `+` and `=` in URLs, as they\n * have specific meanings there and may be misinterpreted. Thus, this uses base64url instead\n * of the more common base64.\n */\n\n/**\n * Encodes a string as base64url\n *\n * @param str - String to encode\n * @returns Encoded string\n * @internal\n */\nexport function encodeBase64Url(str: string): string {\n  return encodeBase64(str).replace(/\\//g, '_').replace(/\\+/g, '-').replace(/[=]+$/, '')\n}\n\n/**\n * Decodes a base64url-encoded string\n *\n * @param str - String to decode\n * @returns Decoded string\n * @internal\n */\nexport function decodeBase64Url(str: string): string {\n  return decodeBase64(str.replace(/-/g, '+').replace(/_/g, '/'))\n}\n\nfunction percentToByte(p: string) {\n  return String.fromCharCode(parseInt(p.slice(1), 16))\n}\n\nfunction encodeBase64(str: string): string {\n  return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte))\n}\n\nfunction byteToPercent(b: string) {\n  return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`\n}\n\nfunction decodeBase64(str: string): string {\n  return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''))\n}\n","import {decodeBase64Url, encodeBase64Url} from './base64url'\n\n/**\n * Decode a path segment containing JSON parameters\n *\n * @param pathSegment - The path segment to decode\n * @returns The decoded parameters\n * @internal\n * @hidden\n */\nexport function decodeJsonParams(pathSegment = ''): Record<string, unknown> {\n  const segment = decodeURIComponent(pathSegment)\n\n  if (!segment) {\n    return {}\n  }\n\n  // Because of high-unicode characters (eg outside of the latin1 range), we prefer base64url\n  // since it also removes characters we'd rather not put in our URLs (eg '=' and '/')\n  try {\n    return JSON.parse(decodeBase64Url(segment))\n  } catch (err) {\n    // Fall-through: previously we used plain base64 encoding instead of base64url\n  }\n\n  try {\n    return JSON.parse(atob(segment))\n  } catch (err) {\n    // Fall-through: before _that_, we used plain URI encoding\n  }\n\n  try {\n    return JSON.parse(segment)\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n  }\n\n  return {}\n}\n\n/**\n * Encodes a set of parameters as a path segment, using base64url\n *\n * @param params - Paramters to encode\n * @returns The encoded parameters as a path segment\n * @internal\n * @hidden\n */\nexport function encodeJsonParams(params?: Record<string, unknown>): string {\n  return params ? encodeBase64Url(JSON.stringify(params)) : ''\n}\n","export function decodeParams(pathSegment: string): Record<string, string> {\n  return pathSegment.split(';').reduce<Record<string, string>>((params, pair) => {\n    const [key, value] = pair.split('=')\n\n    params[decodeURIComponent(key)] = decodeURIComponent(value)\n\n    return params\n  }, {})\n}\n\nexport function encodeParams(params: Record<string, string | undefined | null>): string {\n  return Object.entries(params)\n    .filter(([, value]) => value !== undefined && value !== null)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n    .join(';')\n}\n","import {_parseRoute} from './_parseRoute'\nimport {_resolvePathFromState} from './_resolvePathFromState'\nimport {_resolveStateFromPath} from './_resolveStateFromPath'\nimport {type RouteChildren, type Router, type RouteTransform} from './types'\nimport {decodeJsonParams, encodeJsonParams} from './utils/jsonParamsEncoding'\nimport {decodeParams, encodeParams} from './utils/paramsEncoding'\n\n/**\n * @public\n */\nexport interface RouteNodeOptions {\n  /**\n   * The path of the route node.\n   */\n  path?: string\n  /**\n   * The children of the route node. See {@link RouteChildren}\n   */\n  children?: RouteChildren\n  /**\n   * The transforms to apply to the route node. See {@link RouteTransform}\n   */\n  transform?: {\n    [key: string]: RouteTransform<any>\n  }\n  /**\n   * The scope of the route node.\n   */\n  scope?: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n}\n\n/**\n * Interface for the {@link route} object.\n *\n * @public\n */\nexport interface RouteObject {\n  /**\n   * Creates a new router.\n   * Returns {@link Router}\n   * See {@link RouteNodeOptions} and {@link RouteChildren}\n   */\n  create: (\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) => Router\n\n  /**\n   * Creates a new router for handling intents.\n   * Returns {@link Router}\n   */\n  intents: (base: string) => Router\n\n  /**\n   * Creates a new router scope.\n   * Returns {@link Router}\n   */\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ): Router\n}\n\n/**\n * An object containing functions for creating routers and router scopes.\n * See {@link RouteObject}\n *\n * @public\n *\n * @example\n * ```ts\n * const router = route.create({\n *   path: \"/foo\",\n *   children: [\n *     route.create({\n *       path: \"/bar\",\n *       children: [\n *         route.create({\n *           path: \"/:baz\",\n *           transform: {\n *             baz: {\n *               toState: (id) => ({ id }),\n *               toPath: (state) => state.id,\n *             },\n *           },\n *         }),\n *       ],\n *     }),\n *   ],\n * });\n * ```\n */\nexport const route: RouteObject = {\n  create: (routeOrOpts, childrenOrOpts, children) =>\n    _createNode(normalizeArgs(routeOrOpts, childrenOrOpts, children)),\n  intents: (base: string) => {\n    const basePath = normalize(base).join('/')\n\n    return route.create(`${basePath}/:intent`, [\n      route.create(\n        ':params',\n        {\n          transform: {\n            params: {\n              toState: decodeParams,\n              toPath: encodeParams,\n            },\n          },\n        },\n        [\n          route.create(':payload', {\n            transform: {\n              payload: {\n                toState: decodeJsonParams,\n                toPath: encodeJsonParams,\n              },\n            },\n          }),\n        ],\n      ),\n    ])\n  },\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) {\n    const options = normalizeArgs(routeOrOpts, childrenOrOpts, children)\n\n    return _createNode({\n      ...options,\n      scope: scopeName,\n    })\n  },\n}\n\nfunction normalizeChildren(children: any): RouteChildren {\n  if (Array.isArray(children) || typeof children === 'function') {\n    return children\n  }\n  return children ? [children] : []\n}\n\nfunction isRoute(val?: RouteNodeOptions | Router | RouteChildren) {\n  return val && '_isRoute' in val\n}\n\nfunction normalizeArgs(...args: any[]): RouteNodeOptions\nfunction normalizeArgs(\n  path: string | RouteNodeOptions,\n  childrenOrOpts?: RouteNodeOptions | Router | RouteChildren,\n  children?: Router | RouteChildren,\n): RouteNodeOptions {\n  if (typeof path === 'object') {\n    return path\n  }\n\n  if (\n    Array.isArray(childrenOrOpts) ||\n    typeof childrenOrOpts === 'function' ||\n    isRoute(childrenOrOpts)\n  ) {\n    return {path, children: normalizeChildren(childrenOrOpts)}\n  }\n\n  if (children) {\n    return {path, ...childrenOrOpts, children: normalizeChildren(children)}\n  }\n\n  return {path, ...childrenOrOpts}\n}\n\nfunction normalize(...paths: string[]) {\n  return paths.reduce<string[]>((acc, path) => acc.concat(path.split('/')), []).filter(Boolean)\n}\n\nconst EMPTY_STATE = {}\n\nfunction isRoot(pathname: string): boolean {\n  // it is the root if every segment is an empty string\n  return pathname.split('/').every((segment) => !segment)\n}\n\n/**\n * @internal\n * @param options - Route node options\n */\nexport function _createNode(options: RouteNodeOptions): Router {\n  // eslint-disable-next-line camelcase\n  const {path, scope, transform, children, __unsafe_disableScopedSearchParams} = options\n\n  if (!path) {\n    throw new TypeError('Missing path')\n  }\n\n  const parsedRoute = _parseRoute(path)\n\n  return {\n    _isRoute: true, // todo: make a Router class instead\n    scope,\n    // eslint-disable-next-line camelcase\n    __unsafe_disableScopedSearchParams,\n    route: parsedRoute,\n    children: children || [],\n    transform,\n    encode(state) {\n      return _resolvePathFromState(this, state)\n    },\n    decode(_path) {\n      return _resolveStateFromPath(this, _path)\n    },\n    isRoot: isRoot,\n    isNotFound(pathname: string): boolean {\n      return this.decode(pathname) === null\n    },\n    getBasePath(): string {\n      return this.encode(EMPTY_STATE)\n    },\n    getRedirectBase(pathname: string): string | null {\n      if (isRoot(pathname)) {\n        const basePath = this.getBasePath()\n        // Check if basepath is something different than given\n        if (pathname !== basePath) {\n          return basePath\n        }\n      }\n      return null\n    },\n  }\n}\n","import {type ReactNode, useCallback, useMemo} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {\n  type IntentParameters,\n  type NavigateOptions,\n  type Router,\n  type RouterContextValue,\n  type RouterState,\n  type SearchParam,\n} from './types'\n\n/**\n * The props for the {@link RouterProvider} component.\n *\n * @public\n */\nexport interface RouterProviderProps {\n  /**\n   * A function that is called when the user navigates to a new path.\n   * Takes an object containing the path to navigate to and an optional `replace` flag.\n   */\n  onNavigate: (opts: {path: string; replace?: boolean}) => void\n  /**\n   * The router object that is used to handle navigation. See {@link Router}\n   */\n  router: Router\n  /**\n   * The current state of the router. See {@link RouterState}\n   */\n  state: RouterState\n  /**\n   * The child elements to render.\n   */\n  children: ReactNode\n}\n\n/**\n * @example\n * ```tsx\n * import {\n *   NavigateOptions,\n *   route,\n *   RouterProvider,\n *   RouterState\n * } from 'sanity'\n * import {useCallback, useMemo} from 'react'\n *\n * function Root() {\n *   const [router] = useState(() => route.create('/'))\n *\n *   const [state, setState] = useState<RouterState>({})\n *\n *   const handleNavigate = useCallback((\n *     path: string,\n *     options?: NavigateOptions\n *   ) => {\n *     console.log('navigate', path, options)\n *\n *     setState(router.decode(path))\n *   }, [router])\n *\n *   return (\n *     <RouterProvider\n *       onNavigate={handleNavigate}\n *       router={router}\n *       state={state}\n *     >\n *       <div>This is a routed application</div>\n *     </RouterProvider>\n *   )\n * }\n * ```\n *\n * @param props - The component props.\n *  {@link RouterProviderProps}\n *\n * @public\n */\nexport function RouterProvider(props: RouterProviderProps): React.JSX.Element {\n  const {onNavigate, router: routerProp, state} = props\n\n  const resolveIntentLink = useCallback(\n    (intentName: string, parameters?: IntentParameters, _searchParams?: SearchParam[]): string => {\n      const [params, payload] = Array.isArray(parameters) ? parameters : [parameters]\n      return routerProp.encode({\n        intent: intentName,\n        params,\n        payload,\n        _searchParams,\n      })\n    },\n    [routerProp],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: Record<string, unknown>): string => {\n      return routerProp.encode(nextState)\n    },\n    [routerProp],\n  )\n\n  const navigate = useCallback(\n    (nextState: Record<string, unknown>, options: NavigateOptions = {}) => {\n      onNavigate({path: resolvePathFromState(nextState), replace: options.replace})\n    },\n    [onNavigate, resolvePathFromState],\n  )\n\n  const navigateIntent = useCallback(\n    (intentName: string, params?: IntentParameters, options: NavigateOptions = {}) => {\n      onNavigate({path: resolveIntentLink(intentName, params), replace: options.replace})\n    },\n    [onNavigate, resolveIntentLink],\n  )\n\n  const router: RouterContextValue = useMemo(\n    () => ({\n      navigate,\n      navigateIntent,\n      navigateUrl: onNavigate,\n      resolveIntentLink,\n      resolvePathFromState,\n      state,\n    }),\n    [navigate, navigateIntent, onNavigate, resolveIntentLink, resolvePathFromState, state],\n  )\n\n  return <RouterContext.Provider value={router}>{props.children}</RouterContext.Provider>\n}\n","/* eslint-disable camelcase */\nimport {type ReactNode, useCallback, useEffect, useMemo, useRef} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {type NavigateOptions, type RouterContextValue, type RouterState} from './types'\nimport {useRouter} from './useRouter'\n\nfunction addScope(\n  routerState: Record<string, any>,\n  scope: string,\n  scopedState: Record<string, any>,\n) {\n  return (\n    scopedState && {\n      ...routerState,\n      [scope]: scopedState,\n    }\n  )\n}\n\n/**\n * Props for the {@link RouteScope} component.\n *\n * @public\n */\nexport interface RouteScopeProps {\n  /**\n   * The scope for the nested routes.\n   */\n  scope: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n  /**\n   * The content to display inside the route scope.\n   */\n  children: ReactNode\n}\n\n/**\n * A component that wraps a scoped router context, so that calls to\n * `useRouter()`, `useRouterState()`, and usage of `<StateLink />`\n * will be prefixed with the scope segment.\n *\n * @public\n *\n * @param props - Props to pass `RouteScope` component.\n *  See {@link RouteScopeProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return (\n *    <RouteScope scope=\"foo\">\n *      <StateLink state={{bar: 'baz'}}>Link</StateLink>\n *    </RouteScope>\n *  )\n * }\n * ```\n */\nexport const RouteScope = function RouteScope(props: RouteScopeProps): React.JSX.Element {\n  const {children, scope, __unsafe_disableScopedSearchParams} = props\n  const parentRouter = useRouter()\n  const {resolvePathFromState: parent_resolvePathFromState, navigate: parent_navigate} =\n    parentRouter\n\n  const parentStateRef = useRef(parentRouter.state)\n  useEffect(() => {\n    parentStateRef.current = parentRouter.state\n  }, [parentRouter.state])\n\n  const resolveNextParentState = useCallback(\n    (_nextState: RouterState) => {\n      const {_searchParams, ...nextState} = _nextState\n      const nextParentState = addScope(parentStateRef.current, scope, nextState)\n      if (__unsafe_disableScopedSearchParams) {\n        // Move search params to parent scope\n        nextParentState._searchParams = _searchParams\n      } else {\n        nextParentState[scope]._searchParams = _searchParams\n      }\n      return nextParentState\n    },\n    [scope, __unsafe_disableScopedSearchParams],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: RouterState) => parent_resolvePathFromState(resolveNextParentState(nextState)),\n    [parent_resolvePathFromState, resolveNextParentState],\n  )\n\n  const navigate = useCallback(\n    (nextState: RouterState, options?: NavigateOptions) =>\n      parent_navigate(resolveNextParentState(nextState), options),\n    [parent_navigate, resolveNextParentState],\n  )\n\n  const childRouter: RouterContextValue = useMemo(() => {\n    const parentState = parentRouter.state\n    const childState = {...(parentState[scope] || {})} as RouterState\n    if (__unsafe_disableScopedSearchParams) {\n      childState._searchParams = parentState._searchParams\n    }\n    return {\n      ...parentRouter,\n      navigate,\n      resolvePathFromState,\n      state: childState,\n    }\n  }, [scope, parentRouter, navigate, resolvePathFromState, __unsafe_disableScopedSearchParams])\n\n  return <RouterContext.Provider value={childRouter}>{children}</RouterContext.Provider>\n}\nRouteScope.displayName = 'RouteScope'\n","import {type MouseEventHandler, useMemo} from 'react'\n\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\nconst EMPTY_STATE = {}\n\n/**\n * @public\n */\nexport interface UseStateLinkOptions {\n  /**\n   * The click event handler for the link.\n   */\n  onClick?: MouseEventHandler<HTMLElement>\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state object to update when the link is clicked.\n   */\n  state?: Record<string, unknown>\n  /**\n   * The target window or frame to open the linked document in.\n   */\n  target?: string\n  /**\n   * Whether to navigate to the index page of the linked document.\n   */\n  toIndex?: boolean\n}\n\n/**\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseStateLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n *\n * @example\n * ```tsx\n * const {onClick, href} = useStateLink({state: {foo: 'bar'}})\n * ```\n */\nexport function useStateLink(options: UseStateLinkOptions): {\n  onClick: MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {onClick: onClickProp, replace, state, target, toIndex = false} = options\n\n  if (state && toIndex) {\n    throw new Error('Passing both `state` and `toIndex={true}` as props to StateLink is invalid')\n  }\n\n  if (!state && !toIndex) {\n    // eslint-disable-next-line no-console\n    console.error(\n      new Error(\n        'No state passed to StateLink. If you want to link to an empty state, its better to use the the `toIndex` property',\n      ),\n    )\n  }\n\n  const {resolvePathFromState} = useRouter()\n\n  const href = useMemo(\n    () => resolvePathFromState(toIndex ? EMPTY_STATE : state || EMPTY_STATE),\n    [resolvePathFromState, state, toIndex],\n  )\n\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useStateLink} from './useStateLink'\n\n/**\n * Props for the {@link StateLink} component.\n *\n * @public\n */\nexport interface StateLinkProps {\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state to associate with the link.\n   */\n  state?: Record<string, unknown>\n  /**\n   * Whether to navigate to the index page of the app.\n   */\n  toIndex?: boolean\n}\n\n/**\n * A component that creates a link that updates the URL state.\n *\n * @remarks\n * This component uses the {@link useStateLink} hook\n * to create a link that updates the URL state.\n *\n * @param props - Props to pass to the `StateLink` component.\n *  See {@link StateLinkProps}.\n *\n * @public\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <StateLink state={{foo: 'bar'}}>Link</StateLink>\n * }\n * ```\n */\nexport const StateLink = forwardRef(function StateLink(\n  props: StateLinkProps & Omit<HTMLProps<HTMLAnchorElement>, 'href'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, replace, state, target, toIndex = false, ...restProps} = props\n  const {onClick, href} = useStateLink({\n    onClick: onClickProp,\n    replace,\n    state,\n    target,\n    toIndex,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} />\n})\n","import {identity} from 'lodash'\nimport {useMemo} from 'react'\n\nimport {type RouterState} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n *\n * @param selector - A selector function that receives the router state and returns a value. See {@link RouterState}\n *\n * @returns The value returned by the selector function or RouterState. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const {activeTool} = useRouterState(state => state.tool)\n * ```\n */\nexport function useRouterState<R = RouterState>(selector: (routerState: RouterState) => R): R\n\n/**\n * @public\n *\n * @returns The router state. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const routerState = useRouterState()\n * ```\n */\nexport function useRouterState(): RouterState\n\n/**\n * @public\n */\nexport function useRouterState(\n  selector: (routerState: RouterState) => unknown = identity,\n): unknown {\n  const {state} = useRouter()\n  return useMemo(() => selector(state), [selector, state])\n}\n","import {type ComponentType, type FunctionComponent} from 'react'\n\nimport {type RouterContextValue} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * A higher-order component that injects the `router` object from the `useRouter` hook\n * into the props of the wrapped component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @param Component - The component to wrap.\n *\n * @returns The wrapped component.\n *\n * @example\n * ```tsx\n * function MyComponent(props) {\n *  return <div>{props.router.state.myParam}</div>\n * }\n *\n * export default withRouter(MyComponent)\n * ```\n */\nexport function withRouter<Props extends {router: RouterContextValue}>(\n  Component: ComponentType<Props>,\n): FunctionComponent<Omit<Props, 'router'>> {\n  function WithRouter(props: Omit<Props, 'router'>) {\n    const router = useRouter()\n\n    return <Component {...(props as Props)} router={router} />\n  }\n\n  WithRouter.displayName = `withRouter(${Component.displayName || Component.name})`\n\n  return WithRouter\n}\n\n/**\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n */\nexport interface WithRouterProps {\n  /**\n   * The `router` object from the `useRouter` hook.\n   *  {@link RouterContextValue}\n   */\n  router: RouterContextValue\n  /**\n   * A function that renders the wrapped component with the `router` object as a parameter.\n   */\n  children: (router: RouterContextValue) => React.JSX.Element\n}\n\n/**\n * A higher-order component that injects the router object into its child component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @returns The rendered component.\n *\n * @example\n * ```tsx\n * function MyComponent(props: {router: Router}) {\n *   const {location} = props.router\n *   const {pathname} = location\n *   return <p>The current path is: {pathname}</p>\n * }\n *\n * function App() {\n *   return (\n *     <Router>\n *       <WithRouter>\n *         {router => <MyComponent router={router} />}\n *       </WithRouter>\n *     </Router>\n *   )\n * }\n * ```\n */\nexport const WithRouter = withRouter((props: WithRouterProps) => props.children(props.router))\n"],"names":["useRouter","router","useContext","RouterContext","Error","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","useLink","options","$","_c","onClick","onClickProp","href","target","replace","t0","undefined","navigateUrl","t1","isDefaultPrevented","preventDefault","path","t2","useIntentLink","intent","params","searchParams","resolveIntentLink","t3","IntentLink","forwardRef","props","ref","restProps","Link","VALID_PARAM_SEGMENT","createSegment","segment","startsWith","paramName","slice","test","addendum","includes","error","type","name","_parseRoute","route","pathname","split","segments","map","filter","Boolean","raw","arrayify","val","Array","isArray","isRecord","value","isPlainObject","createMatchError","node","missingKeys","unmappableStateKeys","createMatchOk","matchedState","child","_findMatchingRoutes","_state","scopedState","scope","_searchParams","state","requiredParams","seg","stateKeys","Object","keys","consumedParams","intersection","missingParams","difference","remainingParams","length","scopedParams","key","consumedState","pick","children","remainingState","found","childNode","find","res","encodeURIComponentExcept","uriComponent","unescaped","chars","String","i","char","encodeURIComponent","debug","Debug","_resolvePathFromState","match","unmappable","quote","join","pathFromMatchResult","search","encodeParams","bracketify","flatMap","encodeSearchParamKey","serializeScopedPath","encodeSearchParamValue","scopedPath","head","tail","base","transform","toPath","childMatch","addNodeScope","__unsafe_disableScopedSearchParams","namespaces","parseScopedParams","parse","OPEN","CLOSED","str","result","nextBracketIdx","indexOf","push","nextClosing","matchPath","parts","segmentsLength","every","toState","rest","childState","unscopedParams","removeScope","some","childParams","selfParams","namespace","mergedState","_resolveStateFromPath","urlSearchParams","from","URLSearchParams","entries","pathMatch","encodeBase64Url","encodeBase64","decodeBase64Url","decodeBase64","percentToByte","p","fromCharCode","parseInt","btoa","byteToPercent","b","charCodeAt","toString","decodeURIComponent","atob","decodeJsonParams","pathSegment","JSON","console","warn","encodeJsonParams","stringify","decodeParams","reduce","pair","create","routeOrOpts","childrenOrOpts","_createNode","normalizeArgs","intents","basePath","normalize","payload","scopeName","normalizeChildren","isRoute","paths","acc","concat","EMPTY_STATE","isRoot","TypeError","parsedRoute","_isRoute","encode","decode","_path","isNotFound","getBasePath","getRedirectBase","RouterProvider","onNavigate","routerProp","intentName","parameters","nextState","resolvePathFromState","nextState_0","navigate","intentName_0","params_0","t4","options_0","navigateIntent","t5","t6","addScope","routerState","RouteScope","parentRouter","parent_resolvePathFromState","parent_navigate","parentStateRef","useRef","current","useEffect","_nextState","nextParentState","resolveNextParentState","nextState_1","parentState","t7","childRouter","t8","displayName","useStateLink","toIndex","StateLink","useRouterState","selector","identity","withRouter","Component","WithRouter"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}},
    {"offset": {"line": 1330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}